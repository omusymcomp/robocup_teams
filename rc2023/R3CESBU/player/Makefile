# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/player/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/helios-base
pkgincludedir = $(includedir)/helios-base
pkglibdir = $(libdir)/helios-base
pkglibexecdir = $(libexecdir)/helios-base
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
noinst_PROGRAMS = sample_player$(EXEEXT)
subdir = src/player
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_17.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_sample_player_OBJECTS =  \
	basic_actions/sample_player-basic_actions.$(OBJEXT) \
	basic_actions/sample_player-bhv_before_kick_off.$(OBJEXT) \
	basic_actions/sample_player-bhv_emergency.$(OBJEXT) \
	basic_actions/sample_player-bhv_go_to_point_look_ball.$(OBJEXT) \
	basic_actions/sample_player-bhv_scan_field.$(OBJEXT) \
	basic_actions/sample_player-body_advance_ball2009.$(OBJEXT) \
	basic_actions/sample_player-body_clear_ball2009.$(OBJEXT) \
	basic_actions/sample_player-body_dribble2008.$(OBJEXT) \
	basic_actions/sample_player-body_go_to_point.$(OBJEXT) \
	basic_actions/sample_player-body_go_to_point_dodge.$(OBJEXT) \
	basic_actions/sample_player-body_hold_ball2008.$(OBJEXT) \
	basic_actions/sample_player-body_intercept2018.$(OBJEXT) \
	basic_actions/sample_player-body_kick_one_step.$(OBJEXT) \
	basic_actions/sample_player-body_kick_to_relative.$(OBJEXT) \
	basic_actions/sample_player-body_pass.$(OBJEXT) \
	basic_actions/sample_player-body_smart_kick.$(OBJEXT) \
	basic_actions/sample_player-body_stop_ball.$(OBJEXT) \
	basic_actions/sample_player-body_stop_dash.$(OBJEXT) \
	basic_actions/sample_player-focus_move_to_point.$(OBJEXT) \
	basic_actions/sample_player-focus_reset.$(OBJEXT) \
	basic_actions/sample_player-intention_dribble2008.$(OBJEXT) \
	basic_actions/sample_player-intention_time_limit_action.$(OBJEXT) \
	basic_actions/sample_player-intercept_evaluator.$(OBJEXT) \
	basic_actions/sample_player-kick_table.$(OBJEXT) \
	basic_actions/sample_player-neck_scan_field.$(OBJEXT) \
	basic_actions/sample_player-neck_scan_players.$(OBJEXT) \
	basic_actions/sample_player-neck_turn_to_ball_and_player.$(OBJEXT) \
	basic_actions/sample_player-neck_turn_to_ball_or_scan.$(OBJEXT) \
	basic_actions/sample_player-neck_turn_to_goalie_or_scan.$(OBJEXT) \
	basic_actions/sample_player-neck_turn_to_player_or_scan.$(OBJEXT) \
	basic_actions/sample_player-neck_turn_to_low_conf_teammate.$(OBJEXT) \
	basic_actions/sample_player-view_synch.$(OBJEXT) \
	planner/sample_player-actgen_cross.$(OBJEXT) \
	planner/sample_player-actgen_direct_pass.$(OBJEXT) \
	planner/sample_player-actgen_self_pass.$(OBJEXT) \
	planner/sample_player-actgen_shoot.$(OBJEXT) \
	planner/sample_player-actgen_short_dribble.$(OBJEXT) \
	planner/sample_player-actgen_simple_dribble.$(OBJEXT) \
	planner/sample_player-actgen_strict_check_pass.$(OBJEXT) \
	planner/sample_player-action_chain_graph.$(OBJEXT) \
	planner/sample_player-action_chain_holder.$(OBJEXT) \
	planner/sample_player-bhv_planned_action.$(OBJEXT) \
	planner/sample_player-bhv_normal_dribble.$(OBJEXT) \
	planner/sample_player-bhv_pass_kick_find_receiver.$(OBJEXT) \
	planner/sample_player-bhv_strict_check_shoot.$(OBJEXT) \
	planner/sample_player-body_force_shoot.$(OBJEXT) \
	planner/sample_player-clear_ball.$(OBJEXT) \
	planner/sample_player-clear_generator.$(OBJEXT) \
	planner/sample_player-cooperative_action.$(OBJEXT) \
	planner/sample_player-cross_generator.$(OBJEXT) \
	planner/sample_player-dribble.$(OBJEXT) \
	planner/sample_player-field_analyzer.$(OBJEXT) \
	planner/sample_player-hold_ball.$(OBJEXT) \
	planner/sample_player-neck_turn_to_receiver.$(OBJEXT) \
	planner/sample_player-pass.$(OBJEXT) \
	planner/sample_player-predict_state.$(OBJEXT) \
	planner/sample_player-self_pass_generator.$(OBJEXT) \
	planner/sample_player-shoot.$(OBJEXT) \
	planner/sample_player-shoot_generator.$(OBJEXT) \
	planner/sample_player-short_dribble_generator.$(OBJEXT) \
	planner/sample_player-simple_pass_checker.$(OBJEXT) \
	planner/sample_player-strict_check_pass_generator.$(OBJEXT) \
	planner/sample_player-tackle_generator.$(OBJEXT) \
	setplay/sample_player-bhv_go_to_placed_ball.$(OBJEXT) \
	setplay/sample_player-bhv_prepare_set_play_kick.$(OBJEXT) \
	setplay/sample_player-bhv_set_play.$(OBJEXT) \
	setplay/sample_player-bhv_set_play_free_kick.$(OBJEXT) \
	setplay/sample_player-bhv_set_play_goal_kick.$(OBJEXT) \
	setplay/sample_player-bhv_set_play_indirect_free_kick.$(OBJEXT) \
	setplay/sample_player-bhv_set_play_kick_in.$(OBJEXT) \
	setplay/sample_player-bhv_set_play_kick_off.$(OBJEXT) \
	setplay/sample_player-bhv_their_goal_kick_move.$(OBJEXT) \
	setplay/sample_player-intention_wait_after_set_play_kick.$(OBJEXT) \
	sample_player-bhv_basic_move.$(OBJEXT) \
	sample_player-bhv_basic_block.$(OBJEXT) \
	sample_player-bhv_unmark.$(OBJEXT) \
	sample_player-bhv_basic_tackle.$(OBJEXT) \
	sample_player-bhv_custom_before_kick_off.$(OBJEXT) \
	sample_player-bhv_goalie_basic_move.$(OBJEXT) \
	sample_player-bhv_goalie_chase_ball.$(OBJEXT) \
	sample_player-bhv_goalie_free_kick.$(OBJEXT) \
	sample_player-bhv_penalty_kick.$(OBJEXT) \
	sample_player-neck_default_intercept_neck.$(OBJEXT) \
	sample_player-neck_goalie_turn_neck.$(OBJEXT) \
	sample_player-neck_offensive_intercept_neck.$(OBJEXT) \
	sample_player-view_tactical.$(OBJEXT) \
	sample_player-intention_receive.$(OBJEXT) \
	sample_player-intercept_evaluator_sample.$(OBJEXT) \
	sample_player-soccer_role.$(OBJEXT) \
	sample_player-role_center_back.$(OBJEXT) \
	sample_player-role_center_forward.$(OBJEXT) \
	sample_player-role_defensive_half.$(OBJEXT) \
	sample_player-role_goalie.$(OBJEXT) \
	sample_player-role_offensive_half.$(OBJEXT) \
	sample_player-role_sample.$(OBJEXT) \
	sample_player-role_side_back.$(OBJEXT) \
	sample_player-role_side_forward.$(OBJEXT) \
	sample_player-role_side_half.$(OBJEXT) \
	sample_player-role_keepaway_keeper.$(OBJEXT) \
	sample_player-role_keepaway_taker.$(OBJEXT) \
	sample_player-keepaway_communication.$(OBJEXT) \
	sample_player-sample_communication.$(OBJEXT) \
	sample_player-sample_field_evaluator.$(OBJEXT) \
	sample_player-sample_freeform_message_parser.$(OBJEXT) \
	sample_player-sample_player.$(OBJEXT) \
	sample_player-strategy.$(OBJEXT) \
	sample_player-main_player.$(OBJEXT)
sample_player_OBJECTS = $(am_sample_player_OBJECTS)
sample_player_DEPENDENCIES =
sample_player_LINK = $(CXXLD) $(sample_player_CXXFLAGS) $(CXXFLAGS) \
	$(sample_player_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/sample_player-bhv_basic_block.Po \
	./$(DEPDIR)/sample_player-bhv_basic_move.Po \
	./$(DEPDIR)/sample_player-bhv_basic_tackle.Po \
	./$(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po \
	./$(DEPDIR)/sample_player-bhv_goalie_basic_move.Po \
	./$(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po \
	./$(DEPDIR)/sample_player-bhv_goalie_free_kick.Po \
	./$(DEPDIR)/sample_player-bhv_penalty_kick.Po \
	./$(DEPDIR)/sample_player-bhv_unmark.Po \
	./$(DEPDIR)/sample_player-intention_receive.Po \
	./$(DEPDIR)/sample_player-intercept_evaluator_sample.Po \
	./$(DEPDIR)/sample_player-keepaway_communication.Po \
	./$(DEPDIR)/sample_player-main_player.Po \
	./$(DEPDIR)/sample_player-neck_default_intercept_neck.Po \
	./$(DEPDIR)/sample_player-neck_goalie_turn_neck.Po \
	./$(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po \
	./$(DEPDIR)/sample_player-role_center_back.Po \
	./$(DEPDIR)/sample_player-role_center_forward.Po \
	./$(DEPDIR)/sample_player-role_defensive_half.Po \
	./$(DEPDIR)/sample_player-role_goalie.Po \
	./$(DEPDIR)/sample_player-role_keepaway_keeper.Po \
	./$(DEPDIR)/sample_player-role_keepaway_taker.Po \
	./$(DEPDIR)/sample_player-role_offensive_half.Po \
	./$(DEPDIR)/sample_player-role_sample.Po \
	./$(DEPDIR)/sample_player-role_side_back.Po \
	./$(DEPDIR)/sample_player-role_side_forward.Po \
	./$(DEPDIR)/sample_player-role_side_half.Po \
	./$(DEPDIR)/sample_player-sample_communication.Po \
	./$(DEPDIR)/sample_player-sample_field_evaluator.Po \
	./$(DEPDIR)/sample_player-sample_freeform_message_parser.Po \
	./$(DEPDIR)/sample_player-sample_player.Po \
	./$(DEPDIR)/sample_player-soccer_role.Po \
	./$(DEPDIR)/sample_player-strategy.Po \
	./$(DEPDIR)/sample_player-view_tactical.Po \
	basic_actions/$(DEPDIR)/sample_player-basic_actions.Po \
	basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po \
	basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po \
	basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po \
	basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po \
	basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po \
	basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po \
	basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po \
	basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po \
	basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po \
	basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po \
	basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po \
	basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po \
	basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po \
	basic_actions/$(DEPDIR)/sample_player-body_pass.Po \
	basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po \
	basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po \
	basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po \
	basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po \
	basic_actions/$(DEPDIR)/sample_player-focus_reset.Po \
	basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po \
	basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po \
	basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po \
	basic_actions/$(DEPDIR)/sample_player-kick_table.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po \
	basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po \
	basic_actions/$(DEPDIR)/sample_player-view_synch.Po \
	planner/$(DEPDIR)/sample_player-actgen_cross.Po \
	planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po \
	planner/$(DEPDIR)/sample_player-actgen_self_pass.Po \
	planner/$(DEPDIR)/sample_player-actgen_shoot.Po \
	planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po \
	planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po \
	planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po \
	planner/$(DEPDIR)/sample_player-action_chain_graph.Po \
	planner/$(DEPDIR)/sample_player-action_chain_holder.Po \
	planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po \
	planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po \
	planner/$(DEPDIR)/sample_player-bhv_planned_action.Po \
	planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po \
	planner/$(DEPDIR)/sample_player-body_force_shoot.Po \
	planner/$(DEPDIR)/sample_player-clear_ball.Po \
	planner/$(DEPDIR)/sample_player-clear_generator.Po \
	planner/$(DEPDIR)/sample_player-cooperative_action.Po \
	planner/$(DEPDIR)/sample_player-cross_generator.Po \
	planner/$(DEPDIR)/sample_player-dribble.Po \
	planner/$(DEPDIR)/sample_player-field_analyzer.Po \
	planner/$(DEPDIR)/sample_player-hold_ball.Po \
	planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po \
	planner/$(DEPDIR)/sample_player-pass.Po \
	planner/$(DEPDIR)/sample_player-predict_state.Po \
	planner/$(DEPDIR)/sample_player-self_pass_generator.Po \
	planner/$(DEPDIR)/sample_player-shoot.Po \
	planner/$(DEPDIR)/sample_player-shoot_generator.Po \
	planner/$(DEPDIR)/sample_player-short_dribble_generator.Po \
	planner/$(DEPDIR)/sample_player-simple_pass_checker.Po \
	planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po \
	planner/$(DEPDIR)/sample_player-tackle_generator.Po \
	setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po \
	setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po \
	setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po \
	setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po \
	setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(sample_player_SOURCES)
DIST_SOURCES = $(sample_player_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/asus/Desktop/Robocup/code/R32D/config/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} '/home/asus/Desktop/Robocup/code/R32D/config/missing' autoconf
AUTOHEADER = ${SHELL} '/home/asus/Desktop/Robocup/code/R32D/config/missing' autoheader
AUTOMAKE = ${SHELL} '/home/asus/Desktop/Robocup/code/R32D/config/missing' automake-1.16
AWK = mawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
BOOST_SYSTEM_LIB = -lboost_system
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS =  -I/usr/include
CSCOPE = cscope
CTAGS = ctags
CXX = g++ -std=c++17
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
ETAGS = etags
EXEEXT = 
GREP = /usr/bin/grep
HAVE_CXX17 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS =  -L/usr/lib/x86_64-linux-gnu
LIBOBJS = 
LIBRCSC_LIBDIR = /usr/local/lib
LIBS = -lrcsc -lz -lm -lboost_system 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/home/asus/Desktop/Robocup/code/R32D/config/missing' makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = helios-base
PACKAGE_BUGREPORT = hidehisaakiyama@users.noreply.github.com
PACKAGE_NAME = helios-base
PACKAGE_STRING = helios-base 2023.03
PACKAGE_TARNAME = helios-base
PACKAGE_URL = 
PACKAGE_VERSION = 2023.03
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 2023.03
abs_builddir = /home/asus/Desktop/Robocup/code/R32D/src/player
abs_srcdir = /home/asus/Desktop/Robocup/code/R32D/src/player
abs_top_builddir = /home/asus/Desktop/Robocup/code/R32D
abs_top_srcdir = /home/asus/Desktop/Robocup/code/R32D
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/asus/Desktop/Robocup/code/R32D/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = subdir-objects
sample_player_CPPFLAGS = -I$(top_srcdir)/src/player/planner -I$(top_srcdir)/src/player/setplay
sample_player_CXXFLAGS = -W -Wall
sample_player_LDFLAGS = 
sample_player_LDADD = 
sample_player_SOURCES = \
	basic_actions/basic_actions.cpp \
	basic_actions/bhv_before_kick_off.cpp \
	basic_actions/bhv_emergency.cpp \
	basic_actions/bhv_go_to_point_look_ball.cpp \
	basic_actions/bhv_scan_field.cpp \
	basic_actions/body_advance_ball2009.cpp \
	basic_actions/body_clear_ball2009.cpp \
	basic_actions/body_dribble2008.cpp \
	basic_actions/body_go_to_point.cpp \
	basic_actions/body_go_to_point_dodge.cpp \
	basic_actions/body_hold_ball2008.cpp \
	basic_actions/body_intercept2018.cpp \
	basic_actions/body_kick_one_step.cpp \
	basic_actions/body_kick_to_relative.cpp \
	basic_actions/body_pass.cpp \
	basic_actions/body_smart_kick.cpp \
	basic_actions/body_stop_ball.cpp \
	basic_actions/body_stop_dash.cpp \
	basic_actions/focus_move_to_point.cpp \
	basic_actions/focus_reset.cpp \
	basic_actions/intention_dribble2008.cpp \
	basic_actions/intention_time_limit_action.cpp \
	basic_actions/intercept_evaluator.cpp \
	basic_actions/kick_table.cpp \
	basic_actions/neck_scan_field.cpp \
	basic_actions/neck_scan_players.cpp \
	basic_actions/neck_turn_to_ball_and_player.cpp \
	basic_actions/neck_turn_to_ball_or_scan.cpp \
	basic_actions/neck_turn_to_goalie_or_scan.cpp \
	basic_actions/neck_turn_to_player_or_scan.cpp \
	basic_actions/neck_turn_to_low_conf_teammate.cpp \
	basic_actions/view_synch.cpp \
	planner/actgen_cross.cpp \
	planner/actgen_direct_pass.cpp \
	planner/actgen_self_pass.cpp \
	planner/actgen_shoot.cpp \
	planner/actgen_short_dribble.cpp \
	planner/actgen_simple_dribble.cpp \
	planner/actgen_strict_check_pass.cpp \
	planner/action_chain_graph.cpp \
	planner/action_chain_holder.cpp \
	planner/bhv_planned_action.cpp \
	planner/bhv_normal_dribble.cpp \
	planner/bhv_pass_kick_find_receiver.cpp \
	planner/bhv_strict_check_shoot.cpp \
	planner/body_force_shoot.cpp \
	planner/clear_ball.cpp \
	planner/clear_generator.cpp \
	planner/cooperative_action.cpp \
	planner/cross_generator.cpp \
	planner/dribble.cpp \
	planner/field_analyzer.cpp \
	planner/hold_ball.cpp \
	planner/neck_turn_to_receiver.cpp \
	planner/pass.cpp \
	planner/predict_state.cpp \
	planner/self_pass_generator.cpp \
	planner/shoot.cpp \
	planner/shoot_generator.cpp \
	planner/short_dribble_generator.cpp \
	planner/simple_pass_checker.cpp \
	planner/strict_check_pass_generator.cpp \
	planner/tackle_generator.cpp \
	setplay/bhv_go_to_placed_ball.cpp \
	setplay/bhv_prepare_set_play_kick.cpp \
	setplay/bhv_set_play.cpp \
	setplay/bhv_set_play_free_kick.cpp \
	setplay/bhv_set_play_goal_kick.cpp \
	setplay/bhv_set_play_indirect_free_kick.cpp \
	setplay/bhv_set_play_kick_in.cpp \
	setplay/bhv_set_play_kick_off.cpp \
	setplay/bhv_their_goal_kick_move.cpp \
	setplay/intention_wait_after_set_play_kick.cpp \
	bhv_basic_move.cpp \
	bhv_basic_block.cpp \
	bhv_unmark.cpp \
	bhv_basic_tackle.cpp \
	bhv_custom_before_kick_off.cpp \
	bhv_goalie_basic_move.cpp \
	bhv_goalie_chase_ball.cpp \
	bhv_goalie_free_kick.cpp \
	bhv_penalty_kick.cpp \
	neck_default_intercept_neck.cpp \
	neck_goalie_turn_neck.cpp \
	neck_offensive_intercept_neck.cpp \
	view_tactical.cpp \
	intention_receive.cpp \
	intercept_evaluator_sample.cpp \
	soccer_role.cpp \
	role_center_back.cpp \
	role_center_forward.cpp \
	role_defensive_half.cpp \
	role_goalie.cpp \
	role_offensive_half.cpp \
	role_sample.cpp \
	role_side_back.cpp \
	role_side_forward.cpp \
	role_side_half.cpp \
	role_keepaway_keeper.cpp \
	role_keepaway_taker.cpp \
	keepaway_communication.cpp \
	sample_communication.cpp \
	sample_field_evaluator.cpp \
	sample_freeform_message_parser.cpp \
	sample_player.cpp \
	strategy.cpp \
	main_player.cpp

noinst_HEADERS = \
	basic_actions/basic_actions.h \
	basic_actions/arm_off.h \
	basic_actions/arm_point_to_point.h \
	basic_actions/bhv_before_kick_off.h \
	basic_actions/bhv_body_neck_to_ball.h \
	basic_actions/bhv_body_neck_to_point.h \
	basic_actions/bhv_emergency.h \
	basic_actions/bhv_go_to_point_look_ball.h \
	basic_actions/bhv_neck_body_to_ball.h \
	basic_actions/bhv_neck_body_to_point.h \
	basic_actions/bhv_scan_field.h \
	basic_actions/body_advance_ball.h \
	basic_actions/body_advance_ball2009.h \
	basic_actions/body_clear_ball.h \
	basic_actions/body_clear_ball2009.h \
	basic_actions/body_dribble.h \
	basic_actions/body_dribble2008.h \
	basic_actions/body_go_to_point.h \
	basic_actions/body_go_to_point_dodge.h \
	basic_actions/body_hold_ball.h \
	basic_actions/body_hold_ball2008.h \
	basic_actions/body_intercept.h \
	basic_actions/body_intercept2018.h \
	basic_actions/body_kick_one_step.h \
	basic_actions/body_kick_to_relative.h \
	basic_actions/body_pass.h \
	basic_actions/body_smart_kick.h \
	basic_actions/body_stop_ball.h \
	basic_actions/body_stop_dash.h \
	basic_actions/body_tackle_to_point.h \
	basic_actions/body_turn_to_angle.h \
	basic_actions/body_turn_to_ball.h \
	basic_actions/body_turn_to_point.h \
	basic_actions/focus_move_to_point.h \
	basic_actions/focus_reset.h \
	basic_actions/intention_dribble2008.h \
	basic_actions/intention_time_limit_action.h \
	basic_actions/intercept_evaluator.h \
	basic_actions/kick_table.h \
	basic_actions/neck_scan_field.h \
	basic_actions/neck_scan_players.h \
	basic_actions/neck_turn_to_ball.h \
	basic_actions/neck_turn_to_ball_and_player.h \
	basic_actions/neck_turn_to_ball_or_scan.h \
	basic_actions/neck_turn_to_goalie_or_scan.h \
	basic_actions/neck_turn_to_player_or_scan.h \
	basic_actions/neck_turn_to_low_conf_teammate.h \
	basic_actions/neck_turn_to_point.h \
	basic_actions/neck_turn_to_relative.h \
	basic_actions/view_change_width.h \
	basic_actions/view_normal.h \
	basic_actions/view_synch.h \
	basic_actions/view_wide.h \
	planner/actgen_action_chain_length_filter.h \
	planner/actgen_cross.h \
	planner/actgen_direct_pass.h \
	planner/actgen_self_pass.h \
	planner/actgen_shoot.h \
	planner/actgen_short_dribble.h \
	planner/actgen_simple_dribble.h \
	planner/actgen_strict_check_pass.h \
	planner/action_chain_graph.h \
	planner/action_chain_holder.h \
	planner/action_generator.h \
	planner/action_state_pair.h \
	planner/bhv_planned_action.h \
	planner/bhv_normal_dribble.h \
	planner/bhv_pass_kick_find_receiver.h \
	planner/bhv_strict_check_shoot.h \
	planner/body_force_shoot.h \
	planner/clear_ball.h \
	planner/clear_generator.h \
	planner/cooperative_action.h \
	planner/cross_generator.h \
	planner/dribble.h \
	planner/field_analyzer.h \
	planner/field_evaluator.h \
	planner/hold_ball.h \
	planner/neck_turn_to_receiver.h \
	planner/pass.h \
	planner/pass_checker.h \
	planner/predict_ball_object.h \
	planner/predict_player_object.h \
	planner/predict_state.h \
	planner/self_pass_generator.h \
	planner/shoot.h \
	planner/shoot_generator.h \
	planner/short_dribble_generator.h \
	planner/simple_pass_checker.h \
	planner/strict_check_pass_generator.h \
	planner/tackle_generator.h \
	setplay/bhv_go_to_placed_ball.h \
	setplay/bhv_prepare_set_play_kick.h \
	setplay/bhv_set_play.h \
	setplay/bhv_set_play_free_kick.h \
	setplay/bhv_set_play_goal_kick.h \
	setplay/bhv_set_play_indirect_free_kick.h \
	setplay/bhv_set_play_kick_in.h \
	setplay/bhv_set_play_kick_off.h \
	setplay/bhv_their_goal_kick_move.h \
	setplay/intention_wait_after_set_play_kick.h \
	bhv_basic_move.h \
	bhv_basic_block.h \
	bhv_unmark.h \
	bhv_basic_tackle.h \
	bhv_custom_before_kick_off.h \
	bhv_goalie_basic_move.h \
	bhv_goalie_chase_ball.h \
	bhv_goalie_free_kick.h \
	bhv_penalty_kick.h \
	neck_default_intercept_neck.h \
	neck_goalie_turn_neck.h \
	neck_offensive_intercept_neck.h \
	view_tactical.h \
	intention_receive.h \
	intercept_evaluator_sample.h \
	soccer_role.h \
	role_center_back.h \
	role_center_forward.h \
	role_defensive_half.h \
	role_goalie.h \
	role_offensive_half.h \
	role_sample.h \
	role_side_back.h \
	role_side_forward.h \
	role_side_half.h \
	role_keepaway_keeper.h \
	role_keepaway_taker.h \
	communication.h \
	keepaway_communication.h \
	sample_communication.h \
	sample_field_evaluator.h \
	sample_freeform_message_parser.h \
	sample_player.h \
	strategy.h

AM_CPPFLAGS = 
AM_CFLAGS = -W -Wall
AM_CXXFLAGS = -W -Wall
AM_LDLAGS = 
CLEANFILES = core *~
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/player/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/player/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
basic_actions/$(am__dirstamp):
	@$(MKDIR_P) basic_actions
	@: > basic_actions/$(am__dirstamp)
basic_actions/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) basic_actions/$(DEPDIR)
	@: > basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-basic_actions.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-bhv_before_kick_off.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-bhv_emergency.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-bhv_go_to_point_look_ball.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-bhv_scan_field.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_advance_ball2009.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_clear_ball2009.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_dribble2008.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_go_to_point.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_go_to_point_dodge.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_hold_ball2008.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_intercept2018.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_kick_one_step.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_kick_to_relative.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_pass.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_smart_kick.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_stop_ball.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-body_stop_dash.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-focus_move_to_point.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-focus_reset.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-intention_dribble2008.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-intention_time_limit_action.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-intercept_evaluator.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-kick_table.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_scan_field.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_scan_players.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_turn_to_ball_and_player.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_turn_to_ball_or_scan.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_turn_to_goalie_or_scan.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_turn_to_player_or_scan.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-neck_turn_to_low_conf_teammate.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
basic_actions/sample_player-view_synch.$(OBJEXT):  \
	basic_actions/$(am__dirstamp) \
	basic_actions/$(DEPDIR)/$(am__dirstamp)
planner/$(am__dirstamp):
	@$(MKDIR_P) planner
	@: > planner/$(am__dirstamp)
planner/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) planner/$(DEPDIR)
	@: > planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_cross.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_direct_pass.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_self_pass.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_shoot.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_short_dribble.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_simple_dribble.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-actgen_strict_check_pass.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-action_chain_graph.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-action_chain_holder.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-bhv_planned_action.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-bhv_normal_dribble.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-bhv_pass_kick_find_receiver.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-bhv_strict_check_shoot.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-body_force_shoot.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-clear_ball.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-clear_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-cooperative_action.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-cross_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-dribble.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-field_analyzer.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-hold_ball.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-neck_turn_to_receiver.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-pass.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-predict_state.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-self_pass_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-shoot.$(OBJEXT): planner/$(am__dirstamp) \
	planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-shoot_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-short_dribble_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-simple_pass_checker.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-strict_check_pass_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
planner/sample_player-tackle_generator.$(OBJEXT):  \
	planner/$(am__dirstamp) planner/$(DEPDIR)/$(am__dirstamp)
setplay/$(am__dirstamp):
	@$(MKDIR_P) setplay
	@: > setplay/$(am__dirstamp)
setplay/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) setplay/$(DEPDIR)
	@: > setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_go_to_placed_ball.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_prepare_set_play_kick.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play.$(OBJEXT): setplay/$(am__dirstamp) \
	setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play_free_kick.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play_goal_kick.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play_indirect_free_kick.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play_kick_in.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_set_play_kick_off.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-bhv_their_goal_kick_move.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)
setplay/sample_player-intention_wait_after_set_play_kick.$(OBJEXT):  \
	setplay/$(am__dirstamp) setplay/$(DEPDIR)/$(am__dirstamp)

sample_player$(EXEEXT): $(sample_player_OBJECTS) $(sample_player_DEPENDENCIES) $(EXTRA_sample_player_DEPENDENCIES) 
	@rm -f sample_player$(EXEEXT)
	$(AM_V_CXXLD)$(sample_player_LINK) $(sample_player_OBJECTS) $(sample_player_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f basic_actions/*.$(OBJEXT)
	-rm -f planner/*.$(OBJEXT)
	-rm -f setplay/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/sample_player-bhv_basic_block.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_basic_move.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_basic_tackle.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_goalie_basic_move.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_goalie_free_kick.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_penalty_kick.Po # am--include-marker
include ./$(DEPDIR)/sample_player-bhv_unmark.Po # am--include-marker
include ./$(DEPDIR)/sample_player-intention_receive.Po # am--include-marker
include ./$(DEPDIR)/sample_player-intercept_evaluator_sample.Po # am--include-marker
include ./$(DEPDIR)/sample_player-keepaway_communication.Po # am--include-marker
include ./$(DEPDIR)/sample_player-main_player.Po # am--include-marker
include ./$(DEPDIR)/sample_player-neck_default_intercept_neck.Po # am--include-marker
include ./$(DEPDIR)/sample_player-neck_goalie_turn_neck.Po # am--include-marker
include ./$(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_center_back.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_center_forward.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_defensive_half.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_goalie.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_keepaway_keeper.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_keepaway_taker.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_offensive_half.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_sample.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_side_back.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_side_forward.Po # am--include-marker
include ./$(DEPDIR)/sample_player-role_side_half.Po # am--include-marker
include ./$(DEPDIR)/sample_player-sample_communication.Po # am--include-marker
include ./$(DEPDIR)/sample_player-sample_field_evaluator.Po # am--include-marker
include ./$(DEPDIR)/sample_player-sample_freeform_message_parser.Po # am--include-marker
include ./$(DEPDIR)/sample_player-sample_player.Po # am--include-marker
include ./$(DEPDIR)/sample_player-soccer_role.Po # am--include-marker
include ./$(DEPDIR)/sample_player-strategy.Po # am--include-marker
include ./$(DEPDIR)/sample_player-view_tactical.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-basic_actions.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_pass.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-focus_reset.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-kick_table.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po # am--include-marker
include basic_actions/$(DEPDIR)/sample_player-view_synch.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_cross.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_self_pass.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_shoot.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-action_chain_graph.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-action_chain_holder.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-bhv_planned_action.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-body_force_shoot.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-clear_ball.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-clear_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-cooperative_action.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-cross_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-dribble.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-field_analyzer.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-hold_ball.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-pass.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-predict_state.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-self_pass_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-shoot.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-shoot_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-short_dribble_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-simple_pass_checker.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po # am--include-marker
include planner/$(DEPDIR)/sample_player-tackle_generator.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po # am--include-marker
include setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

basic_actions/sample_player-basic_actions.o: basic_actions/basic_actions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-basic_actions.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-basic_actions.Tpo -c -o basic_actions/sample_player-basic_actions.o `test -f 'basic_actions/basic_actions.cpp' || echo '$(srcdir)/'`basic_actions/basic_actions.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-basic_actions.Tpo basic_actions/$(DEPDIR)/sample_player-basic_actions.Po
#	$(AM_V_CXX)source='basic_actions/basic_actions.cpp' object='basic_actions/sample_player-basic_actions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-basic_actions.o `test -f 'basic_actions/basic_actions.cpp' || echo '$(srcdir)/'`basic_actions/basic_actions.cpp

basic_actions/sample_player-basic_actions.obj: basic_actions/basic_actions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-basic_actions.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-basic_actions.Tpo -c -o basic_actions/sample_player-basic_actions.obj `if test -f 'basic_actions/basic_actions.cpp'; then $(CYGPATH_W) 'basic_actions/basic_actions.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/basic_actions.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-basic_actions.Tpo basic_actions/$(DEPDIR)/sample_player-basic_actions.Po
#	$(AM_V_CXX)source='basic_actions/basic_actions.cpp' object='basic_actions/sample_player-basic_actions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-basic_actions.obj `if test -f 'basic_actions/basic_actions.cpp'; then $(CYGPATH_W) 'basic_actions/basic_actions.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/basic_actions.cpp'; fi`

basic_actions/sample_player-bhv_before_kick_off.o: basic_actions/bhv_before_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_before_kick_off.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Tpo -c -o basic_actions/sample_player-bhv_before_kick_off.o `test -f 'basic_actions/bhv_before_kick_off.cpp' || echo '$(srcdir)/'`basic_actions/bhv_before_kick_off.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po
#	$(AM_V_CXX)source='basic_actions/bhv_before_kick_off.cpp' object='basic_actions/sample_player-bhv_before_kick_off.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_before_kick_off.o `test -f 'basic_actions/bhv_before_kick_off.cpp' || echo '$(srcdir)/'`basic_actions/bhv_before_kick_off.cpp

basic_actions/sample_player-bhv_before_kick_off.obj: basic_actions/bhv_before_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_before_kick_off.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Tpo -c -o basic_actions/sample_player-bhv_before_kick_off.obj `if test -f 'basic_actions/bhv_before_kick_off.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_before_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_before_kick_off.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po
#	$(AM_V_CXX)source='basic_actions/bhv_before_kick_off.cpp' object='basic_actions/sample_player-bhv_before_kick_off.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_before_kick_off.obj `if test -f 'basic_actions/bhv_before_kick_off.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_before_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_before_kick_off.cpp'; fi`

basic_actions/sample_player-bhv_emergency.o: basic_actions/bhv_emergency.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_emergency.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Tpo -c -o basic_actions/sample_player-bhv_emergency.o `test -f 'basic_actions/bhv_emergency.cpp' || echo '$(srcdir)/'`basic_actions/bhv_emergency.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po
#	$(AM_V_CXX)source='basic_actions/bhv_emergency.cpp' object='basic_actions/sample_player-bhv_emergency.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_emergency.o `test -f 'basic_actions/bhv_emergency.cpp' || echo '$(srcdir)/'`basic_actions/bhv_emergency.cpp

basic_actions/sample_player-bhv_emergency.obj: basic_actions/bhv_emergency.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_emergency.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Tpo -c -o basic_actions/sample_player-bhv_emergency.obj `if test -f 'basic_actions/bhv_emergency.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_emergency.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_emergency.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po
#	$(AM_V_CXX)source='basic_actions/bhv_emergency.cpp' object='basic_actions/sample_player-bhv_emergency.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_emergency.obj `if test -f 'basic_actions/bhv_emergency.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_emergency.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_emergency.cpp'; fi`

basic_actions/sample_player-bhv_go_to_point_look_ball.o: basic_actions/bhv_go_to_point_look_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_go_to_point_look_ball.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Tpo -c -o basic_actions/sample_player-bhv_go_to_point_look_ball.o `test -f 'basic_actions/bhv_go_to_point_look_ball.cpp' || echo '$(srcdir)/'`basic_actions/bhv_go_to_point_look_ball.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po
#	$(AM_V_CXX)source='basic_actions/bhv_go_to_point_look_ball.cpp' object='basic_actions/sample_player-bhv_go_to_point_look_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_go_to_point_look_ball.o `test -f 'basic_actions/bhv_go_to_point_look_ball.cpp' || echo '$(srcdir)/'`basic_actions/bhv_go_to_point_look_ball.cpp

basic_actions/sample_player-bhv_go_to_point_look_ball.obj: basic_actions/bhv_go_to_point_look_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_go_to_point_look_ball.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Tpo -c -o basic_actions/sample_player-bhv_go_to_point_look_ball.obj `if test -f 'basic_actions/bhv_go_to_point_look_ball.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_go_to_point_look_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_go_to_point_look_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po
#	$(AM_V_CXX)source='basic_actions/bhv_go_to_point_look_ball.cpp' object='basic_actions/sample_player-bhv_go_to_point_look_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_go_to_point_look_ball.obj `if test -f 'basic_actions/bhv_go_to_point_look_ball.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_go_to_point_look_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_go_to_point_look_ball.cpp'; fi`

basic_actions/sample_player-bhv_scan_field.o: basic_actions/bhv_scan_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_scan_field.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Tpo -c -o basic_actions/sample_player-bhv_scan_field.o `test -f 'basic_actions/bhv_scan_field.cpp' || echo '$(srcdir)/'`basic_actions/bhv_scan_field.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po
#	$(AM_V_CXX)source='basic_actions/bhv_scan_field.cpp' object='basic_actions/sample_player-bhv_scan_field.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_scan_field.o `test -f 'basic_actions/bhv_scan_field.cpp' || echo '$(srcdir)/'`basic_actions/bhv_scan_field.cpp

basic_actions/sample_player-bhv_scan_field.obj: basic_actions/bhv_scan_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-bhv_scan_field.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Tpo -c -o basic_actions/sample_player-bhv_scan_field.obj `if test -f 'basic_actions/bhv_scan_field.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_scan_field.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_scan_field.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Tpo basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po
#	$(AM_V_CXX)source='basic_actions/bhv_scan_field.cpp' object='basic_actions/sample_player-bhv_scan_field.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-bhv_scan_field.obj `if test -f 'basic_actions/bhv_scan_field.cpp'; then $(CYGPATH_W) 'basic_actions/bhv_scan_field.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/bhv_scan_field.cpp'; fi`

basic_actions/sample_player-body_advance_ball2009.o: basic_actions/body_advance_ball2009.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_advance_ball2009.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Tpo -c -o basic_actions/sample_player-body_advance_ball2009.o `test -f 'basic_actions/body_advance_ball2009.cpp' || echo '$(srcdir)/'`basic_actions/body_advance_ball2009.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Tpo basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po
#	$(AM_V_CXX)source='basic_actions/body_advance_ball2009.cpp' object='basic_actions/sample_player-body_advance_ball2009.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_advance_ball2009.o `test -f 'basic_actions/body_advance_ball2009.cpp' || echo '$(srcdir)/'`basic_actions/body_advance_ball2009.cpp

basic_actions/sample_player-body_advance_ball2009.obj: basic_actions/body_advance_ball2009.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_advance_ball2009.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Tpo -c -o basic_actions/sample_player-body_advance_ball2009.obj `if test -f 'basic_actions/body_advance_ball2009.cpp'; then $(CYGPATH_W) 'basic_actions/body_advance_ball2009.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_advance_ball2009.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Tpo basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po
#	$(AM_V_CXX)source='basic_actions/body_advance_ball2009.cpp' object='basic_actions/sample_player-body_advance_ball2009.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_advance_ball2009.obj `if test -f 'basic_actions/body_advance_ball2009.cpp'; then $(CYGPATH_W) 'basic_actions/body_advance_ball2009.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_advance_ball2009.cpp'; fi`

basic_actions/sample_player-body_clear_ball2009.o: basic_actions/body_clear_ball2009.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_clear_ball2009.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Tpo -c -o basic_actions/sample_player-body_clear_ball2009.o `test -f 'basic_actions/body_clear_ball2009.cpp' || echo '$(srcdir)/'`basic_actions/body_clear_ball2009.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Tpo basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po
#	$(AM_V_CXX)source='basic_actions/body_clear_ball2009.cpp' object='basic_actions/sample_player-body_clear_ball2009.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_clear_ball2009.o `test -f 'basic_actions/body_clear_ball2009.cpp' || echo '$(srcdir)/'`basic_actions/body_clear_ball2009.cpp

basic_actions/sample_player-body_clear_ball2009.obj: basic_actions/body_clear_ball2009.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_clear_ball2009.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Tpo -c -o basic_actions/sample_player-body_clear_ball2009.obj `if test -f 'basic_actions/body_clear_ball2009.cpp'; then $(CYGPATH_W) 'basic_actions/body_clear_ball2009.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_clear_ball2009.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Tpo basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po
#	$(AM_V_CXX)source='basic_actions/body_clear_ball2009.cpp' object='basic_actions/sample_player-body_clear_ball2009.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_clear_ball2009.obj `if test -f 'basic_actions/body_clear_ball2009.cpp'; then $(CYGPATH_W) 'basic_actions/body_clear_ball2009.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_clear_ball2009.cpp'; fi`

basic_actions/sample_player-body_dribble2008.o: basic_actions/body_dribble2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_dribble2008.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Tpo -c -o basic_actions/sample_player-body_dribble2008.o `test -f 'basic_actions/body_dribble2008.cpp' || echo '$(srcdir)/'`basic_actions/body_dribble2008.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Tpo basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po
#	$(AM_V_CXX)source='basic_actions/body_dribble2008.cpp' object='basic_actions/sample_player-body_dribble2008.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_dribble2008.o `test -f 'basic_actions/body_dribble2008.cpp' || echo '$(srcdir)/'`basic_actions/body_dribble2008.cpp

basic_actions/sample_player-body_dribble2008.obj: basic_actions/body_dribble2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_dribble2008.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Tpo -c -o basic_actions/sample_player-body_dribble2008.obj `if test -f 'basic_actions/body_dribble2008.cpp'; then $(CYGPATH_W) 'basic_actions/body_dribble2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_dribble2008.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Tpo basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po
#	$(AM_V_CXX)source='basic_actions/body_dribble2008.cpp' object='basic_actions/sample_player-body_dribble2008.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_dribble2008.obj `if test -f 'basic_actions/body_dribble2008.cpp'; then $(CYGPATH_W) 'basic_actions/body_dribble2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_dribble2008.cpp'; fi`

basic_actions/sample_player-body_go_to_point.o: basic_actions/body_go_to_point.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_go_to_point.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Tpo -c -o basic_actions/sample_player-body_go_to_point.o `test -f 'basic_actions/body_go_to_point.cpp' || echo '$(srcdir)/'`basic_actions/body_go_to_point.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Tpo basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po
#	$(AM_V_CXX)source='basic_actions/body_go_to_point.cpp' object='basic_actions/sample_player-body_go_to_point.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_go_to_point.o `test -f 'basic_actions/body_go_to_point.cpp' || echo '$(srcdir)/'`basic_actions/body_go_to_point.cpp

basic_actions/sample_player-body_go_to_point.obj: basic_actions/body_go_to_point.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_go_to_point.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Tpo -c -o basic_actions/sample_player-body_go_to_point.obj `if test -f 'basic_actions/body_go_to_point.cpp'; then $(CYGPATH_W) 'basic_actions/body_go_to_point.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_go_to_point.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Tpo basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po
#	$(AM_V_CXX)source='basic_actions/body_go_to_point.cpp' object='basic_actions/sample_player-body_go_to_point.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_go_to_point.obj `if test -f 'basic_actions/body_go_to_point.cpp'; then $(CYGPATH_W) 'basic_actions/body_go_to_point.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_go_to_point.cpp'; fi`

basic_actions/sample_player-body_go_to_point_dodge.o: basic_actions/body_go_to_point_dodge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_go_to_point_dodge.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Tpo -c -o basic_actions/sample_player-body_go_to_point_dodge.o `test -f 'basic_actions/body_go_to_point_dodge.cpp' || echo '$(srcdir)/'`basic_actions/body_go_to_point_dodge.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Tpo basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po
#	$(AM_V_CXX)source='basic_actions/body_go_to_point_dodge.cpp' object='basic_actions/sample_player-body_go_to_point_dodge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_go_to_point_dodge.o `test -f 'basic_actions/body_go_to_point_dodge.cpp' || echo '$(srcdir)/'`basic_actions/body_go_to_point_dodge.cpp

basic_actions/sample_player-body_go_to_point_dodge.obj: basic_actions/body_go_to_point_dodge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_go_to_point_dodge.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Tpo -c -o basic_actions/sample_player-body_go_to_point_dodge.obj `if test -f 'basic_actions/body_go_to_point_dodge.cpp'; then $(CYGPATH_W) 'basic_actions/body_go_to_point_dodge.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_go_to_point_dodge.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Tpo basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po
#	$(AM_V_CXX)source='basic_actions/body_go_to_point_dodge.cpp' object='basic_actions/sample_player-body_go_to_point_dodge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_go_to_point_dodge.obj `if test -f 'basic_actions/body_go_to_point_dodge.cpp'; then $(CYGPATH_W) 'basic_actions/body_go_to_point_dodge.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_go_to_point_dodge.cpp'; fi`

basic_actions/sample_player-body_hold_ball2008.o: basic_actions/body_hold_ball2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_hold_ball2008.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Tpo -c -o basic_actions/sample_player-body_hold_ball2008.o `test -f 'basic_actions/body_hold_ball2008.cpp' || echo '$(srcdir)/'`basic_actions/body_hold_ball2008.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Tpo basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po
#	$(AM_V_CXX)source='basic_actions/body_hold_ball2008.cpp' object='basic_actions/sample_player-body_hold_ball2008.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_hold_ball2008.o `test -f 'basic_actions/body_hold_ball2008.cpp' || echo '$(srcdir)/'`basic_actions/body_hold_ball2008.cpp

basic_actions/sample_player-body_hold_ball2008.obj: basic_actions/body_hold_ball2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_hold_ball2008.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Tpo -c -o basic_actions/sample_player-body_hold_ball2008.obj `if test -f 'basic_actions/body_hold_ball2008.cpp'; then $(CYGPATH_W) 'basic_actions/body_hold_ball2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_hold_ball2008.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Tpo basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po
#	$(AM_V_CXX)source='basic_actions/body_hold_ball2008.cpp' object='basic_actions/sample_player-body_hold_ball2008.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_hold_ball2008.obj `if test -f 'basic_actions/body_hold_ball2008.cpp'; then $(CYGPATH_W) 'basic_actions/body_hold_ball2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_hold_ball2008.cpp'; fi`

basic_actions/sample_player-body_intercept2018.o: basic_actions/body_intercept2018.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_intercept2018.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Tpo -c -o basic_actions/sample_player-body_intercept2018.o `test -f 'basic_actions/body_intercept2018.cpp' || echo '$(srcdir)/'`basic_actions/body_intercept2018.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Tpo basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po
#	$(AM_V_CXX)source='basic_actions/body_intercept2018.cpp' object='basic_actions/sample_player-body_intercept2018.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_intercept2018.o `test -f 'basic_actions/body_intercept2018.cpp' || echo '$(srcdir)/'`basic_actions/body_intercept2018.cpp

basic_actions/sample_player-body_intercept2018.obj: basic_actions/body_intercept2018.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_intercept2018.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Tpo -c -o basic_actions/sample_player-body_intercept2018.obj `if test -f 'basic_actions/body_intercept2018.cpp'; then $(CYGPATH_W) 'basic_actions/body_intercept2018.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_intercept2018.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Tpo basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po
#	$(AM_V_CXX)source='basic_actions/body_intercept2018.cpp' object='basic_actions/sample_player-body_intercept2018.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_intercept2018.obj `if test -f 'basic_actions/body_intercept2018.cpp'; then $(CYGPATH_W) 'basic_actions/body_intercept2018.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_intercept2018.cpp'; fi`

basic_actions/sample_player-body_kick_one_step.o: basic_actions/body_kick_one_step.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_kick_one_step.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Tpo -c -o basic_actions/sample_player-body_kick_one_step.o `test -f 'basic_actions/body_kick_one_step.cpp' || echo '$(srcdir)/'`basic_actions/body_kick_one_step.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Tpo basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po
#	$(AM_V_CXX)source='basic_actions/body_kick_one_step.cpp' object='basic_actions/sample_player-body_kick_one_step.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_kick_one_step.o `test -f 'basic_actions/body_kick_one_step.cpp' || echo '$(srcdir)/'`basic_actions/body_kick_one_step.cpp

basic_actions/sample_player-body_kick_one_step.obj: basic_actions/body_kick_one_step.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_kick_one_step.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Tpo -c -o basic_actions/sample_player-body_kick_one_step.obj `if test -f 'basic_actions/body_kick_one_step.cpp'; then $(CYGPATH_W) 'basic_actions/body_kick_one_step.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_kick_one_step.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Tpo basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po
#	$(AM_V_CXX)source='basic_actions/body_kick_one_step.cpp' object='basic_actions/sample_player-body_kick_one_step.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_kick_one_step.obj `if test -f 'basic_actions/body_kick_one_step.cpp'; then $(CYGPATH_W) 'basic_actions/body_kick_one_step.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_kick_one_step.cpp'; fi`

basic_actions/sample_player-body_kick_to_relative.o: basic_actions/body_kick_to_relative.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_kick_to_relative.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Tpo -c -o basic_actions/sample_player-body_kick_to_relative.o `test -f 'basic_actions/body_kick_to_relative.cpp' || echo '$(srcdir)/'`basic_actions/body_kick_to_relative.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Tpo basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po
#	$(AM_V_CXX)source='basic_actions/body_kick_to_relative.cpp' object='basic_actions/sample_player-body_kick_to_relative.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_kick_to_relative.o `test -f 'basic_actions/body_kick_to_relative.cpp' || echo '$(srcdir)/'`basic_actions/body_kick_to_relative.cpp

basic_actions/sample_player-body_kick_to_relative.obj: basic_actions/body_kick_to_relative.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_kick_to_relative.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Tpo -c -o basic_actions/sample_player-body_kick_to_relative.obj `if test -f 'basic_actions/body_kick_to_relative.cpp'; then $(CYGPATH_W) 'basic_actions/body_kick_to_relative.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_kick_to_relative.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Tpo basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po
#	$(AM_V_CXX)source='basic_actions/body_kick_to_relative.cpp' object='basic_actions/sample_player-body_kick_to_relative.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_kick_to_relative.obj `if test -f 'basic_actions/body_kick_to_relative.cpp'; then $(CYGPATH_W) 'basic_actions/body_kick_to_relative.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_kick_to_relative.cpp'; fi`

basic_actions/sample_player-body_pass.o: basic_actions/body_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_pass.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_pass.Tpo -c -o basic_actions/sample_player-body_pass.o `test -f 'basic_actions/body_pass.cpp' || echo '$(srcdir)/'`basic_actions/body_pass.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_pass.Tpo basic_actions/$(DEPDIR)/sample_player-body_pass.Po
#	$(AM_V_CXX)source='basic_actions/body_pass.cpp' object='basic_actions/sample_player-body_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_pass.o `test -f 'basic_actions/body_pass.cpp' || echo '$(srcdir)/'`basic_actions/body_pass.cpp

basic_actions/sample_player-body_pass.obj: basic_actions/body_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_pass.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_pass.Tpo -c -o basic_actions/sample_player-body_pass.obj `if test -f 'basic_actions/body_pass.cpp'; then $(CYGPATH_W) 'basic_actions/body_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_pass.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_pass.Tpo basic_actions/$(DEPDIR)/sample_player-body_pass.Po
#	$(AM_V_CXX)source='basic_actions/body_pass.cpp' object='basic_actions/sample_player-body_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_pass.obj `if test -f 'basic_actions/body_pass.cpp'; then $(CYGPATH_W) 'basic_actions/body_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_pass.cpp'; fi`

basic_actions/sample_player-body_smart_kick.o: basic_actions/body_smart_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_smart_kick.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Tpo -c -o basic_actions/sample_player-body_smart_kick.o `test -f 'basic_actions/body_smart_kick.cpp' || echo '$(srcdir)/'`basic_actions/body_smart_kick.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Tpo basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po
#	$(AM_V_CXX)source='basic_actions/body_smart_kick.cpp' object='basic_actions/sample_player-body_smart_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_smart_kick.o `test -f 'basic_actions/body_smart_kick.cpp' || echo '$(srcdir)/'`basic_actions/body_smart_kick.cpp

basic_actions/sample_player-body_smart_kick.obj: basic_actions/body_smart_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_smart_kick.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Tpo -c -o basic_actions/sample_player-body_smart_kick.obj `if test -f 'basic_actions/body_smart_kick.cpp'; then $(CYGPATH_W) 'basic_actions/body_smart_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_smart_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Tpo basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po
#	$(AM_V_CXX)source='basic_actions/body_smart_kick.cpp' object='basic_actions/sample_player-body_smart_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_smart_kick.obj `if test -f 'basic_actions/body_smart_kick.cpp'; then $(CYGPATH_W) 'basic_actions/body_smart_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_smart_kick.cpp'; fi`

basic_actions/sample_player-body_stop_ball.o: basic_actions/body_stop_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_stop_ball.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Tpo -c -o basic_actions/sample_player-body_stop_ball.o `test -f 'basic_actions/body_stop_ball.cpp' || echo '$(srcdir)/'`basic_actions/body_stop_ball.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Tpo basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po
#	$(AM_V_CXX)source='basic_actions/body_stop_ball.cpp' object='basic_actions/sample_player-body_stop_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_stop_ball.o `test -f 'basic_actions/body_stop_ball.cpp' || echo '$(srcdir)/'`basic_actions/body_stop_ball.cpp

basic_actions/sample_player-body_stop_ball.obj: basic_actions/body_stop_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_stop_ball.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Tpo -c -o basic_actions/sample_player-body_stop_ball.obj `if test -f 'basic_actions/body_stop_ball.cpp'; then $(CYGPATH_W) 'basic_actions/body_stop_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_stop_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Tpo basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po
#	$(AM_V_CXX)source='basic_actions/body_stop_ball.cpp' object='basic_actions/sample_player-body_stop_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_stop_ball.obj `if test -f 'basic_actions/body_stop_ball.cpp'; then $(CYGPATH_W) 'basic_actions/body_stop_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_stop_ball.cpp'; fi`

basic_actions/sample_player-body_stop_dash.o: basic_actions/body_stop_dash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_stop_dash.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Tpo -c -o basic_actions/sample_player-body_stop_dash.o `test -f 'basic_actions/body_stop_dash.cpp' || echo '$(srcdir)/'`basic_actions/body_stop_dash.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Tpo basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po
#	$(AM_V_CXX)source='basic_actions/body_stop_dash.cpp' object='basic_actions/sample_player-body_stop_dash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_stop_dash.o `test -f 'basic_actions/body_stop_dash.cpp' || echo '$(srcdir)/'`basic_actions/body_stop_dash.cpp

basic_actions/sample_player-body_stop_dash.obj: basic_actions/body_stop_dash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-body_stop_dash.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Tpo -c -o basic_actions/sample_player-body_stop_dash.obj `if test -f 'basic_actions/body_stop_dash.cpp'; then $(CYGPATH_W) 'basic_actions/body_stop_dash.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_stop_dash.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Tpo basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po
#	$(AM_V_CXX)source='basic_actions/body_stop_dash.cpp' object='basic_actions/sample_player-body_stop_dash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-body_stop_dash.obj `if test -f 'basic_actions/body_stop_dash.cpp'; then $(CYGPATH_W) 'basic_actions/body_stop_dash.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/body_stop_dash.cpp'; fi`

basic_actions/sample_player-focus_move_to_point.o: basic_actions/focus_move_to_point.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-focus_move_to_point.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Tpo -c -o basic_actions/sample_player-focus_move_to_point.o `test -f 'basic_actions/focus_move_to_point.cpp' || echo '$(srcdir)/'`basic_actions/focus_move_to_point.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Tpo basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po
#	$(AM_V_CXX)source='basic_actions/focus_move_to_point.cpp' object='basic_actions/sample_player-focus_move_to_point.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-focus_move_to_point.o `test -f 'basic_actions/focus_move_to_point.cpp' || echo '$(srcdir)/'`basic_actions/focus_move_to_point.cpp

basic_actions/sample_player-focus_move_to_point.obj: basic_actions/focus_move_to_point.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-focus_move_to_point.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Tpo -c -o basic_actions/sample_player-focus_move_to_point.obj `if test -f 'basic_actions/focus_move_to_point.cpp'; then $(CYGPATH_W) 'basic_actions/focus_move_to_point.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/focus_move_to_point.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Tpo basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po
#	$(AM_V_CXX)source='basic_actions/focus_move_to_point.cpp' object='basic_actions/sample_player-focus_move_to_point.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-focus_move_to_point.obj `if test -f 'basic_actions/focus_move_to_point.cpp'; then $(CYGPATH_W) 'basic_actions/focus_move_to_point.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/focus_move_to_point.cpp'; fi`

basic_actions/sample_player-focus_reset.o: basic_actions/focus_reset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-focus_reset.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-focus_reset.Tpo -c -o basic_actions/sample_player-focus_reset.o `test -f 'basic_actions/focus_reset.cpp' || echo '$(srcdir)/'`basic_actions/focus_reset.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-focus_reset.Tpo basic_actions/$(DEPDIR)/sample_player-focus_reset.Po
#	$(AM_V_CXX)source='basic_actions/focus_reset.cpp' object='basic_actions/sample_player-focus_reset.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-focus_reset.o `test -f 'basic_actions/focus_reset.cpp' || echo '$(srcdir)/'`basic_actions/focus_reset.cpp

basic_actions/sample_player-focus_reset.obj: basic_actions/focus_reset.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-focus_reset.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-focus_reset.Tpo -c -o basic_actions/sample_player-focus_reset.obj `if test -f 'basic_actions/focus_reset.cpp'; then $(CYGPATH_W) 'basic_actions/focus_reset.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/focus_reset.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-focus_reset.Tpo basic_actions/$(DEPDIR)/sample_player-focus_reset.Po
#	$(AM_V_CXX)source='basic_actions/focus_reset.cpp' object='basic_actions/sample_player-focus_reset.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-focus_reset.obj `if test -f 'basic_actions/focus_reset.cpp'; then $(CYGPATH_W) 'basic_actions/focus_reset.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/focus_reset.cpp'; fi`

basic_actions/sample_player-intention_dribble2008.o: basic_actions/intention_dribble2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intention_dribble2008.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Tpo -c -o basic_actions/sample_player-intention_dribble2008.o `test -f 'basic_actions/intention_dribble2008.cpp' || echo '$(srcdir)/'`basic_actions/intention_dribble2008.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Tpo basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po
#	$(AM_V_CXX)source='basic_actions/intention_dribble2008.cpp' object='basic_actions/sample_player-intention_dribble2008.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intention_dribble2008.o `test -f 'basic_actions/intention_dribble2008.cpp' || echo '$(srcdir)/'`basic_actions/intention_dribble2008.cpp

basic_actions/sample_player-intention_dribble2008.obj: basic_actions/intention_dribble2008.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intention_dribble2008.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Tpo -c -o basic_actions/sample_player-intention_dribble2008.obj `if test -f 'basic_actions/intention_dribble2008.cpp'; then $(CYGPATH_W) 'basic_actions/intention_dribble2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intention_dribble2008.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Tpo basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po
#	$(AM_V_CXX)source='basic_actions/intention_dribble2008.cpp' object='basic_actions/sample_player-intention_dribble2008.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intention_dribble2008.obj `if test -f 'basic_actions/intention_dribble2008.cpp'; then $(CYGPATH_W) 'basic_actions/intention_dribble2008.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intention_dribble2008.cpp'; fi`

basic_actions/sample_player-intention_time_limit_action.o: basic_actions/intention_time_limit_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intention_time_limit_action.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Tpo -c -o basic_actions/sample_player-intention_time_limit_action.o `test -f 'basic_actions/intention_time_limit_action.cpp' || echo '$(srcdir)/'`basic_actions/intention_time_limit_action.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Tpo basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po
#	$(AM_V_CXX)source='basic_actions/intention_time_limit_action.cpp' object='basic_actions/sample_player-intention_time_limit_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intention_time_limit_action.o `test -f 'basic_actions/intention_time_limit_action.cpp' || echo '$(srcdir)/'`basic_actions/intention_time_limit_action.cpp

basic_actions/sample_player-intention_time_limit_action.obj: basic_actions/intention_time_limit_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intention_time_limit_action.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Tpo -c -o basic_actions/sample_player-intention_time_limit_action.obj `if test -f 'basic_actions/intention_time_limit_action.cpp'; then $(CYGPATH_W) 'basic_actions/intention_time_limit_action.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intention_time_limit_action.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Tpo basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po
#	$(AM_V_CXX)source='basic_actions/intention_time_limit_action.cpp' object='basic_actions/sample_player-intention_time_limit_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intention_time_limit_action.obj `if test -f 'basic_actions/intention_time_limit_action.cpp'; then $(CYGPATH_W) 'basic_actions/intention_time_limit_action.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intention_time_limit_action.cpp'; fi`

basic_actions/sample_player-intercept_evaluator.o: basic_actions/intercept_evaluator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intercept_evaluator.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Tpo -c -o basic_actions/sample_player-intercept_evaluator.o `test -f 'basic_actions/intercept_evaluator.cpp' || echo '$(srcdir)/'`basic_actions/intercept_evaluator.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Tpo basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po
#	$(AM_V_CXX)source='basic_actions/intercept_evaluator.cpp' object='basic_actions/sample_player-intercept_evaluator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intercept_evaluator.o `test -f 'basic_actions/intercept_evaluator.cpp' || echo '$(srcdir)/'`basic_actions/intercept_evaluator.cpp

basic_actions/sample_player-intercept_evaluator.obj: basic_actions/intercept_evaluator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-intercept_evaluator.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Tpo -c -o basic_actions/sample_player-intercept_evaluator.obj `if test -f 'basic_actions/intercept_evaluator.cpp'; then $(CYGPATH_W) 'basic_actions/intercept_evaluator.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intercept_evaluator.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Tpo basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po
#	$(AM_V_CXX)source='basic_actions/intercept_evaluator.cpp' object='basic_actions/sample_player-intercept_evaluator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-intercept_evaluator.obj `if test -f 'basic_actions/intercept_evaluator.cpp'; then $(CYGPATH_W) 'basic_actions/intercept_evaluator.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/intercept_evaluator.cpp'; fi`

basic_actions/sample_player-kick_table.o: basic_actions/kick_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-kick_table.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-kick_table.Tpo -c -o basic_actions/sample_player-kick_table.o `test -f 'basic_actions/kick_table.cpp' || echo '$(srcdir)/'`basic_actions/kick_table.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-kick_table.Tpo basic_actions/$(DEPDIR)/sample_player-kick_table.Po
#	$(AM_V_CXX)source='basic_actions/kick_table.cpp' object='basic_actions/sample_player-kick_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-kick_table.o `test -f 'basic_actions/kick_table.cpp' || echo '$(srcdir)/'`basic_actions/kick_table.cpp

basic_actions/sample_player-kick_table.obj: basic_actions/kick_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-kick_table.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-kick_table.Tpo -c -o basic_actions/sample_player-kick_table.obj `if test -f 'basic_actions/kick_table.cpp'; then $(CYGPATH_W) 'basic_actions/kick_table.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/kick_table.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-kick_table.Tpo basic_actions/$(DEPDIR)/sample_player-kick_table.Po
#	$(AM_V_CXX)source='basic_actions/kick_table.cpp' object='basic_actions/sample_player-kick_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-kick_table.obj `if test -f 'basic_actions/kick_table.cpp'; then $(CYGPATH_W) 'basic_actions/kick_table.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/kick_table.cpp'; fi`

basic_actions/sample_player-neck_scan_field.o: basic_actions/neck_scan_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_scan_field.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Tpo -c -o basic_actions/sample_player-neck_scan_field.o `test -f 'basic_actions/neck_scan_field.cpp' || echo '$(srcdir)/'`basic_actions/neck_scan_field.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Tpo basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po
#	$(AM_V_CXX)source='basic_actions/neck_scan_field.cpp' object='basic_actions/sample_player-neck_scan_field.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_scan_field.o `test -f 'basic_actions/neck_scan_field.cpp' || echo '$(srcdir)/'`basic_actions/neck_scan_field.cpp

basic_actions/sample_player-neck_scan_field.obj: basic_actions/neck_scan_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_scan_field.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Tpo -c -o basic_actions/sample_player-neck_scan_field.obj `if test -f 'basic_actions/neck_scan_field.cpp'; then $(CYGPATH_W) 'basic_actions/neck_scan_field.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_scan_field.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Tpo basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po
#	$(AM_V_CXX)source='basic_actions/neck_scan_field.cpp' object='basic_actions/sample_player-neck_scan_field.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_scan_field.obj `if test -f 'basic_actions/neck_scan_field.cpp'; then $(CYGPATH_W) 'basic_actions/neck_scan_field.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_scan_field.cpp'; fi`

basic_actions/sample_player-neck_scan_players.o: basic_actions/neck_scan_players.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_scan_players.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Tpo -c -o basic_actions/sample_player-neck_scan_players.o `test -f 'basic_actions/neck_scan_players.cpp' || echo '$(srcdir)/'`basic_actions/neck_scan_players.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Tpo basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po
#	$(AM_V_CXX)source='basic_actions/neck_scan_players.cpp' object='basic_actions/sample_player-neck_scan_players.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_scan_players.o `test -f 'basic_actions/neck_scan_players.cpp' || echo '$(srcdir)/'`basic_actions/neck_scan_players.cpp

basic_actions/sample_player-neck_scan_players.obj: basic_actions/neck_scan_players.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_scan_players.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Tpo -c -o basic_actions/sample_player-neck_scan_players.obj `if test -f 'basic_actions/neck_scan_players.cpp'; then $(CYGPATH_W) 'basic_actions/neck_scan_players.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_scan_players.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Tpo basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po
#	$(AM_V_CXX)source='basic_actions/neck_scan_players.cpp' object='basic_actions/sample_player-neck_scan_players.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_scan_players.obj `if test -f 'basic_actions/neck_scan_players.cpp'; then $(CYGPATH_W) 'basic_actions/neck_scan_players.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_scan_players.cpp'; fi`

basic_actions/sample_player-neck_turn_to_ball_and_player.o: basic_actions/neck_turn_to_ball_and_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_ball_and_player.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Tpo -c -o basic_actions/sample_player-neck_turn_to_ball_and_player.o `test -f 'basic_actions/neck_turn_to_ball_and_player.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_ball_and_player.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_ball_and_player.cpp' object='basic_actions/sample_player-neck_turn_to_ball_and_player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_ball_and_player.o `test -f 'basic_actions/neck_turn_to_ball_and_player.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_ball_and_player.cpp

basic_actions/sample_player-neck_turn_to_ball_and_player.obj: basic_actions/neck_turn_to_ball_and_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_ball_and_player.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Tpo -c -o basic_actions/sample_player-neck_turn_to_ball_and_player.obj `if test -f 'basic_actions/neck_turn_to_ball_and_player.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_ball_and_player.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_ball_and_player.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_ball_and_player.cpp' object='basic_actions/sample_player-neck_turn_to_ball_and_player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_ball_and_player.obj `if test -f 'basic_actions/neck_turn_to_ball_and_player.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_ball_and_player.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_ball_and_player.cpp'; fi`

basic_actions/sample_player-neck_turn_to_ball_or_scan.o: basic_actions/neck_turn_to_ball_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_ball_or_scan.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_ball_or_scan.o `test -f 'basic_actions/neck_turn_to_ball_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_ball_or_scan.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_ball_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_ball_or_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_ball_or_scan.o `test -f 'basic_actions/neck_turn_to_ball_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_ball_or_scan.cpp

basic_actions/sample_player-neck_turn_to_ball_or_scan.obj: basic_actions/neck_turn_to_ball_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_ball_or_scan.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_ball_or_scan.obj `if test -f 'basic_actions/neck_turn_to_ball_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_ball_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_ball_or_scan.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_ball_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_ball_or_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_ball_or_scan.obj `if test -f 'basic_actions/neck_turn_to_ball_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_ball_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_ball_or_scan.cpp'; fi`

basic_actions/sample_player-neck_turn_to_goalie_or_scan.o: basic_actions/neck_turn_to_goalie_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_goalie_or_scan.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_goalie_or_scan.o `test -f 'basic_actions/neck_turn_to_goalie_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_goalie_or_scan.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_goalie_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_goalie_or_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_goalie_or_scan.o `test -f 'basic_actions/neck_turn_to_goalie_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_goalie_or_scan.cpp

basic_actions/sample_player-neck_turn_to_goalie_or_scan.obj: basic_actions/neck_turn_to_goalie_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_goalie_or_scan.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_goalie_or_scan.obj `if test -f 'basic_actions/neck_turn_to_goalie_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_goalie_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_goalie_or_scan.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_goalie_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_goalie_or_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_goalie_or_scan.obj `if test -f 'basic_actions/neck_turn_to_goalie_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_goalie_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_goalie_or_scan.cpp'; fi`

basic_actions/sample_player-neck_turn_to_player_or_scan.o: basic_actions/neck_turn_to_player_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_player_or_scan.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_player_or_scan.o `test -f 'basic_actions/neck_turn_to_player_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_player_or_scan.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_player_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_player_or_scan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_player_or_scan.o `test -f 'basic_actions/neck_turn_to_player_or_scan.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_player_or_scan.cpp

basic_actions/sample_player-neck_turn_to_player_or_scan.obj: basic_actions/neck_turn_to_player_or_scan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_player_or_scan.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Tpo -c -o basic_actions/sample_player-neck_turn_to_player_or_scan.obj `if test -f 'basic_actions/neck_turn_to_player_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_player_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_player_or_scan.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_player_or_scan.cpp' object='basic_actions/sample_player-neck_turn_to_player_or_scan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_player_or_scan.obj `if test -f 'basic_actions/neck_turn_to_player_or_scan.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_player_or_scan.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_player_or_scan.cpp'; fi`

basic_actions/sample_player-neck_turn_to_low_conf_teammate.o: basic_actions/neck_turn_to_low_conf_teammate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_low_conf_teammate.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Tpo -c -o basic_actions/sample_player-neck_turn_to_low_conf_teammate.o `test -f 'basic_actions/neck_turn_to_low_conf_teammate.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_low_conf_teammate.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_low_conf_teammate.cpp' object='basic_actions/sample_player-neck_turn_to_low_conf_teammate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_low_conf_teammate.o `test -f 'basic_actions/neck_turn_to_low_conf_teammate.cpp' || echo '$(srcdir)/'`basic_actions/neck_turn_to_low_conf_teammate.cpp

basic_actions/sample_player-neck_turn_to_low_conf_teammate.obj: basic_actions/neck_turn_to_low_conf_teammate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-neck_turn_to_low_conf_teammate.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Tpo -c -o basic_actions/sample_player-neck_turn_to_low_conf_teammate.obj `if test -f 'basic_actions/neck_turn_to_low_conf_teammate.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_low_conf_teammate.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_low_conf_teammate.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Tpo basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po
#	$(AM_V_CXX)source='basic_actions/neck_turn_to_low_conf_teammate.cpp' object='basic_actions/sample_player-neck_turn_to_low_conf_teammate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-neck_turn_to_low_conf_teammate.obj `if test -f 'basic_actions/neck_turn_to_low_conf_teammate.cpp'; then $(CYGPATH_W) 'basic_actions/neck_turn_to_low_conf_teammate.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/neck_turn_to_low_conf_teammate.cpp'; fi`

basic_actions/sample_player-view_synch.o: basic_actions/view_synch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-view_synch.o -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-view_synch.Tpo -c -o basic_actions/sample_player-view_synch.o `test -f 'basic_actions/view_synch.cpp' || echo '$(srcdir)/'`basic_actions/view_synch.cpp
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-view_synch.Tpo basic_actions/$(DEPDIR)/sample_player-view_synch.Po
#	$(AM_V_CXX)source='basic_actions/view_synch.cpp' object='basic_actions/sample_player-view_synch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-view_synch.o `test -f 'basic_actions/view_synch.cpp' || echo '$(srcdir)/'`basic_actions/view_synch.cpp

basic_actions/sample_player-view_synch.obj: basic_actions/view_synch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT basic_actions/sample_player-view_synch.obj -MD -MP -MF basic_actions/$(DEPDIR)/sample_player-view_synch.Tpo -c -o basic_actions/sample_player-view_synch.obj `if test -f 'basic_actions/view_synch.cpp'; then $(CYGPATH_W) 'basic_actions/view_synch.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/view_synch.cpp'; fi`
	$(AM_V_at)$(am__mv) basic_actions/$(DEPDIR)/sample_player-view_synch.Tpo basic_actions/$(DEPDIR)/sample_player-view_synch.Po
#	$(AM_V_CXX)source='basic_actions/view_synch.cpp' object='basic_actions/sample_player-view_synch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o basic_actions/sample_player-view_synch.obj `if test -f 'basic_actions/view_synch.cpp'; then $(CYGPATH_W) 'basic_actions/view_synch.cpp'; else $(CYGPATH_W) '$(srcdir)/basic_actions/view_synch.cpp'; fi`

planner/sample_player-actgen_cross.o: planner/actgen_cross.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_cross.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_cross.Tpo -c -o planner/sample_player-actgen_cross.o `test -f 'planner/actgen_cross.cpp' || echo '$(srcdir)/'`planner/actgen_cross.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_cross.Tpo planner/$(DEPDIR)/sample_player-actgen_cross.Po
#	$(AM_V_CXX)source='planner/actgen_cross.cpp' object='planner/sample_player-actgen_cross.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_cross.o `test -f 'planner/actgen_cross.cpp' || echo '$(srcdir)/'`planner/actgen_cross.cpp

planner/sample_player-actgen_cross.obj: planner/actgen_cross.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_cross.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_cross.Tpo -c -o planner/sample_player-actgen_cross.obj `if test -f 'planner/actgen_cross.cpp'; then $(CYGPATH_W) 'planner/actgen_cross.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_cross.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_cross.Tpo planner/$(DEPDIR)/sample_player-actgen_cross.Po
#	$(AM_V_CXX)source='planner/actgen_cross.cpp' object='planner/sample_player-actgen_cross.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_cross.obj `if test -f 'planner/actgen_cross.cpp'; then $(CYGPATH_W) 'planner/actgen_cross.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_cross.cpp'; fi`

planner/sample_player-actgen_direct_pass.o: planner/actgen_direct_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_direct_pass.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_direct_pass.Tpo -c -o planner/sample_player-actgen_direct_pass.o `test -f 'planner/actgen_direct_pass.cpp' || echo '$(srcdir)/'`planner/actgen_direct_pass.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_direct_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po
#	$(AM_V_CXX)source='planner/actgen_direct_pass.cpp' object='planner/sample_player-actgen_direct_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_direct_pass.o `test -f 'planner/actgen_direct_pass.cpp' || echo '$(srcdir)/'`planner/actgen_direct_pass.cpp

planner/sample_player-actgen_direct_pass.obj: planner/actgen_direct_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_direct_pass.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_direct_pass.Tpo -c -o planner/sample_player-actgen_direct_pass.obj `if test -f 'planner/actgen_direct_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_direct_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_direct_pass.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_direct_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po
#	$(AM_V_CXX)source='planner/actgen_direct_pass.cpp' object='planner/sample_player-actgen_direct_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_direct_pass.obj `if test -f 'planner/actgen_direct_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_direct_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_direct_pass.cpp'; fi`

planner/sample_player-actgen_self_pass.o: planner/actgen_self_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_self_pass.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_self_pass.Tpo -c -o planner/sample_player-actgen_self_pass.o `test -f 'planner/actgen_self_pass.cpp' || echo '$(srcdir)/'`planner/actgen_self_pass.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_self_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_self_pass.Po
#	$(AM_V_CXX)source='planner/actgen_self_pass.cpp' object='planner/sample_player-actgen_self_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_self_pass.o `test -f 'planner/actgen_self_pass.cpp' || echo '$(srcdir)/'`planner/actgen_self_pass.cpp

planner/sample_player-actgen_self_pass.obj: planner/actgen_self_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_self_pass.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_self_pass.Tpo -c -o planner/sample_player-actgen_self_pass.obj `if test -f 'planner/actgen_self_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_self_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_self_pass.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_self_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_self_pass.Po
#	$(AM_V_CXX)source='planner/actgen_self_pass.cpp' object='planner/sample_player-actgen_self_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_self_pass.obj `if test -f 'planner/actgen_self_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_self_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_self_pass.cpp'; fi`

planner/sample_player-actgen_shoot.o: planner/actgen_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_shoot.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_shoot.Tpo -c -o planner/sample_player-actgen_shoot.o `test -f 'planner/actgen_shoot.cpp' || echo '$(srcdir)/'`planner/actgen_shoot.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_shoot.Tpo planner/$(DEPDIR)/sample_player-actgen_shoot.Po
#	$(AM_V_CXX)source='planner/actgen_shoot.cpp' object='planner/sample_player-actgen_shoot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_shoot.o `test -f 'planner/actgen_shoot.cpp' || echo '$(srcdir)/'`planner/actgen_shoot.cpp

planner/sample_player-actgen_shoot.obj: planner/actgen_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_shoot.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_shoot.Tpo -c -o planner/sample_player-actgen_shoot.obj `if test -f 'planner/actgen_shoot.cpp'; then $(CYGPATH_W) 'planner/actgen_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_shoot.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_shoot.Tpo planner/$(DEPDIR)/sample_player-actgen_shoot.Po
#	$(AM_V_CXX)source='planner/actgen_shoot.cpp' object='planner/sample_player-actgen_shoot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_shoot.obj `if test -f 'planner/actgen_shoot.cpp'; then $(CYGPATH_W) 'planner/actgen_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_shoot.cpp'; fi`

planner/sample_player-actgen_short_dribble.o: planner/actgen_short_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_short_dribble.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_short_dribble.Tpo -c -o planner/sample_player-actgen_short_dribble.o `test -f 'planner/actgen_short_dribble.cpp' || echo '$(srcdir)/'`planner/actgen_short_dribble.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_short_dribble.Tpo planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po
#	$(AM_V_CXX)source='planner/actgen_short_dribble.cpp' object='planner/sample_player-actgen_short_dribble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_short_dribble.o `test -f 'planner/actgen_short_dribble.cpp' || echo '$(srcdir)/'`planner/actgen_short_dribble.cpp

planner/sample_player-actgen_short_dribble.obj: planner/actgen_short_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_short_dribble.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_short_dribble.Tpo -c -o planner/sample_player-actgen_short_dribble.obj `if test -f 'planner/actgen_short_dribble.cpp'; then $(CYGPATH_W) 'planner/actgen_short_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_short_dribble.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_short_dribble.Tpo planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po
#	$(AM_V_CXX)source='planner/actgen_short_dribble.cpp' object='planner/sample_player-actgen_short_dribble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_short_dribble.obj `if test -f 'planner/actgen_short_dribble.cpp'; then $(CYGPATH_W) 'planner/actgen_short_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_short_dribble.cpp'; fi`

planner/sample_player-actgen_simple_dribble.o: planner/actgen_simple_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_simple_dribble.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Tpo -c -o planner/sample_player-actgen_simple_dribble.o `test -f 'planner/actgen_simple_dribble.cpp' || echo '$(srcdir)/'`planner/actgen_simple_dribble.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Tpo planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po
#	$(AM_V_CXX)source='planner/actgen_simple_dribble.cpp' object='planner/sample_player-actgen_simple_dribble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_simple_dribble.o `test -f 'planner/actgen_simple_dribble.cpp' || echo '$(srcdir)/'`planner/actgen_simple_dribble.cpp

planner/sample_player-actgen_simple_dribble.obj: planner/actgen_simple_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_simple_dribble.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Tpo -c -o planner/sample_player-actgen_simple_dribble.obj `if test -f 'planner/actgen_simple_dribble.cpp'; then $(CYGPATH_W) 'planner/actgen_simple_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_simple_dribble.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Tpo planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po
#	$(AM_V_CXX)source='planner/actgen_simple_dribble.cpp' object='planner/sample_player-actgen_simple_dribble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_simple_dribble.obj `if test -f 'planner/actgen_simple_dribble.cpp'; then $(CYGPATH_W) 'planner/actgen_simple_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_simple_dribble.cpp'; fi`

planner/sample_player-actgen_strict_check_pass.o: planner/actgen_strict_check_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_strict_check_pass.o -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Tpo -c -o planner/sample_player-actgen_strict_check_pass.o `test -f 'planner/actgen_strict_check_pass.cpp' || echo '$(srcdir)/'`planner/actgen_strict_check_pass.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po
#	$(AM_V_CXX)source='planner/actgen_strict_check_pass.cpp' object='planner/sample_player-actgen_strict_check_pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_strict_check_pass.o `test -f 'planner/actgen_strict_check_pass.cpp' || echo '$(srcdir)/'`planner/actgen_strict_check_pass.cpp

planner/sample_player-actgen_strict_check_pass.obj: planner/actgen_strict_check_pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-actgen_strict_check_pass.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Tpo -c -o planner/sample_player-actgen_strict_check_pass.obj `if test -f 'planner/actgen_strict_check_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_strict_check_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_strict_check_pass.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Tpo planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po
#	$(AM_V_CXX)source='planner/actgen_strict_check_pass.cpp' object='planner/sample_player-actgen_strict_check_pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-actgen_strict_check_pass.obj `if test -f 'planner/actgen_strict_check_pass.cpp'; then $(CYGPATH_W) 'planner/actgen_strict_check_pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/actgen_strict_check_pass.cpp'; fi`

planner/sample_player-action_chain_graph.o: planner/action_chain_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-action_chain_graph.o -MD -MP -MF planner/$(DEPDIR)/sample_player-action_chain_graph.Tpo -c -o planner/sample_player-action_chain_graph.o `test -f 'planner/action_chain_graph.cpp' || echo '$(srcdir)/'`planner/action_chain_graph.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-action_chain_graph.Tpo planner/$(DEPDIR)/sample_player-action_chain_graph.Po
#	$(AM_V_CXX)source='planner/action_chain_graph.cpp' object='planner/sample_player-action_chain_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-action_chain_graph.o `test -f 'planner/action_chain_graph.cpp' || echo '$(srcdir)/'`planner/action_chain_graph.cpp

planner/sample_player-action_chain_graph.obj: planner/action_chain_graph.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-action_chain_graph.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-action_chain_graph.Tpo -c -o planner/sample_player-action_chain_graph.obj `if test -f 'planner/action_chain_graph.cpp'; then $(CYGPATH_W) 'planner/action_chain_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/action_chain_graph.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-action_chain_graph.Tpo planner/$(DEPDIR)/sample_player-action_chain_graph.Po
#	$(AM_V_CXX)source='planner/action_chain_graph.cpp' object='planner/sample_player-action_chain_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-action_chain_graph.obj `if test -f 'planner/action_chain_graph.cpp'; then $(CYGPATH_W) 'planner/action_chain_graph.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/action_chain_graph.cpp'; fi`

planner/sample_player-action_chain_holder.o: planner/action_chain_holder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-action_chain_holder.o -MD -MP -MF planner/$(DEPDIR)/sample_player-action_chain_holder.Tpo -c -o planner/sample_player-action_chain_holder.o `test -f 'planner/action_chain_holder.cpp' || echo '$(srcdir)/'`planner/action_chain_holder.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-action_chain_holder.Tpo planner/$(DEPDIR)/sample_player-action_chain_holder.Po
#	$(AM_V_CXX)source='planner/action_chain_holder.cpp' object='planner/sample_player-action_chain_holder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-action_chain_holder.o `test -f 'planner/action_chain_holder.cpp' || echo '$(srcdir)/'`planner/action_chain_holder.cpp

planner/sample_player-action_chain_holder.obj: planner/action_chain_holder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-action_chain_holder.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-action_chain_holder.Tpo -c -o planner/sample_player-action_chain_holder.obj `if test -f 'planner/action_chain_holder.cpp'; then $(CYGPATH_W) 'planner/action_chain_holder.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/action_chain_holder.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-action_chain_holder.Tpo planner/$(DEPDIR)/sample_player-action_chain_holder.Po
#	$(AM_V_CXX)source='planner/action_chain_holder.cpp' object='planner/sample_player-action_chain_holder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-action_chain_holder.obj `if test -f 'planner/action_chain_holder.cpp'; then $(CYGPATH_W) 'planner/action_chain_holder.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/action_chain_holder.cpp'; fi`

planner/sample_player-bhv_planned_action.o: planner/bhv_planned_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_planned_action.o -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_planned_action.Tpo -c -o planner/sample_player-bhv_planned_action.o `test -f 'planner/bhv_planned_action.cpp' || echo '$(srcdir)/'`planner/bhv_planned_action.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_planned_action.Tpo planner/$(DEPDIR)/sample_player-bhv_planned_action.Po
#	$(AM_V_CXX)source='planner/bhv_planned_action.cpp' object='planner/sample_player-bhv_planned_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_planned_action.o `test -f 'planner/bhv_planned_action.cpp' || echo '$(srcdir)/'`planner/bhv_planned_action.cpp

planner/sample_player-bhv_planned_action.obj: planner/bhv_planned_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_planned_action.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_planned_action.Tpo -c -o planner/sample_player-bhv_planned_action.obj `if test -f 'planner/bhv_planned_action.cpp'; then $(CYGPATH_W) 'planner/bhv_planned_action.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_planned_action.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_planned_action.Tpo planner/$(DEPDIR)/sample_player-bhv_planned_action.Po
#	$(AM_V_CXX)source='planner/bhv_planned_action.cpp' object='planner/sample_player-bhv_planned_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_planned_action.obj `if test -f 'planner/bhv_planned_action.cpp'; then $(CYGPATH_W) 'planner/bhv_planned_action.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_planned_action.cpp'; fi`

planner/sample_player-bhv_normal_dribble.o: planner/bhv_normal_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_normal_dribble.o -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Tpo -c -o planner/sample_player-bhv_normal_dribble.o `test -f 'planner/bhv_normal_dribble.cpp' || echo '$(srcdir)/'`planner/bhv_normal_dribble.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Tpo planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po
#	$(AM_V_CXX)source='planner/bhv_normal_dribble.cpp' object='planner/sample_player-bhv_normal_dribble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_normal_dribble.o `test -f 'planner/bhv_normal_dribble.cpp' || echo '$(srcdir)/'`planner/bhv_normal_dribble.cpp

planner/sample_player-bhv_normal_dribble.obj: planner/bhv_normal_dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_normal_dribble.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Tpo -c -o planner/sample_player-bhv_normal_dribble.obj `if test -f 'planner/bhv_normal_dribble.cpp'; then $(CYGPATH_W) 'planner/bhv_normal_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_normal_dribble.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Tpo planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po
#	$(AM_V_CXX)source='planner/bhv_normal_dribble.cpp' object='planner/sample_player-bhv_normal_dribble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_normal_dribble.obj `if test -f 'planner/bhv_normal_dribble.cpp'; then $(CYGPATH_W) 'planner/bhv_normal_dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_normal_dribble.cpp'; fi`

planner/sample_player-bhv_pass_kick_find_receiver.o: planner/bhv_pass_kick_find_receiver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_pass_kick_find_receiver.o -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Tpo -c -o planner/sample_player-bhv_pass_kick_find_receiver.o `test -f 'planner/bhv_pass_kick_find_receiver.cpp' || echo '$(srcdir)/'`planner/bhv_pass_kick_find_receiver.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Tpo planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po
#	$(AM_V_CXX)source='planner/bhv_pass_kick_find_receiver.cpp' object='planner/sample_player-bhv_pass_kick_find_receiver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_pass_kick_find_receiver.o `test -f 'planner/bhv_pass_kick_find_receiver.cpp' || echo '$(srcdir)/'`planner/bhv_pass_kick_find_receiver.cpp

planner/sample_player-bhv_pass_kick_find_receiver.obj: planner/bhv_pass_kick_find_receiver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_pass_kick_find_receiver.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Tpo -c -o planner/sample_player-bhv_pass_kick_find_receiver.obj `if test -f 'planner/bhv_pass_kick_find_receiver.cpp'; then $(CYGPATH_W) 'planner/bhv_pass_kick_find_receiver.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_pass_kick_find_receiver.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Tpo planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po
#	$(AM_V_CXX)source='planner/bhv_pass_kick_find_receiver.cpp' object='planner/sample_player-bhv_pass_kick_find_receiver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_pass_kick_find_receiver.obj `if test -f 'planner/bhv_pass_kick_find_receiver.cpp'; then $(CYGPATH_W) 'planner/bhv_pass_kick_find_receiver.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_pass_kick_find_receiver.cpp'; fi`

planner/sample_player-bhv_strict_check_shoot.o: planner/bhv_strict_check_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_strict_check_shoot.o -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Tpo -c -o planner/sample_player-bhv_strict_check_shoot.o `test -f 'planner/bhv_strict_check_shoot.cpp' || echo '$(srcdir)/'`planner/bhv_strict_check_shoot.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Tpo planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po
#	$(AM_V_CXX)source='planner/bhv_strict_check_shoot.cpp' object='planner/sample_player-bhv_strict_check_shoot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_strict_check_shoot.o `test -f 'planner/bhv_strict_check_shoot.cpp' || echo '$(srcdir)/'`planner/bhv_strict_check_shoot.cpp

planner/sample_player-bhv_strict_check_shoot.obj: planner/bhv_strict_check_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-bhv_strict_check_shoot.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Tpo -c -o planner/sample_player-bhv_strict_check_shoot.obj `if test -f 'planner/bhv_strict_check_shoot.cpp'; then $(CYGPATH_W) 'planner/bhv_strict_check_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_strict_check_shoot.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Tpo planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po
#	$(AM_V_CXX)source='planner/bhv_strict_check_shoot.cpp' object='planner/sample_player-bhv_strict_check_shoot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-bhv_strict_check_shoot.obj `if test -f 'planner/bhv_strict_check_shoot.cpp'; then $(CYGPATH_W) 'planner/bhv_strict_check_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/bhv_strict_check_shoot.cpp'; fi`

planner/sample_player-body_force_shoot.o: planner/body_force_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-body_force_shoot.o -MD -MP -MF planner/$(DEPDIR)/sample_player-body_force_shoot.Tpo -c -o planner/sample_player-body_force_shoot.o `test -f 'planner/body_force_shoot.cpp' || echo '$(srcdir)/'`planner/body_force_shoot.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-body_force_shoot.Tpo planner/$(DEPDIR)/sample_player-body_force_shoot.Po
#	$(AM_V_CXX)source='planner/body_force_shoot.cpp' object='planner/sample_player-body_force_shoot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-body_force_shoot.o `test -f 'planner/body_force_shoot.cpp' || echo '$(srcdir)/'`planner/body_force_shoot.cpp

planner/sample_player-body_force_shoot.obj: planner/body_force_shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-body_force_shoot.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-body_force_shoot.Tpo -c -o planner/sample_player-body_force_shoot.obj `if test -f 'planner/body_force_shoot.cpp'; then $(CYGPATH_W) 'planner/body_force_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/body_force_shoot.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-body_force_shoot.Tpo planner/$(DEPDIR)/sample_player-body_force_shoot.Po
#	$(AM_V_CXX)source='planner/body_force_shoot.cpp' object='planner/sample_player-body_force_shoot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-body_force_shoot.obj `if test -f 'planner/body_force_shoot.cpp'; then $(CYGPATH_W) 'planner/body_force_shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/body_force_shoot.cpp'; fi`

planner/sample_player-clear_ball.o: planner/clear_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-clear_ball.o -MD -MP -MF planner/$(DEPDIR)/sample_player-clear_ball.Tpo -c -o planner/sample_player-clear_ball.o `test -f 'planner/clear_ball.cpp' || echo '$(srcdir)/'`planner/clear_ball.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-clear_ball.Tpo planner/$(DEPDIR)/sample_player-clear_ball.Po
#	$(AM_V_CXX)source='planner/clear_ball.cpp' object='planner/sample_player-clear_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-clear_ball.o `test -f 'planner/clear_ball.cpp' || echo '$(srcdir)/'`planner/clear_ball.cpp

planner/sample_player-clear_ball.obj: planner/clear_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-clear_ball.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-clear_ball.Tpo -c -o planner/sample_player-clear_ball.obj `if test -f 'planner/clear_ball.cpp'; then $(CYGPATH_W) 'planner/clear_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/clear_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-clear_ball.Tpo planner/$(DEPDIR)/sample_player-clear_ball.Po
#	$(AM_V_CXX)source='planner/clear_ball.cpp' object='planner/sample_player-clear_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-clear_ball.obj `if test -f 'planner/clear_ball.cpp'; then $(CYGPATH_W) 'planner/clear_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/clear_ball.cpp'; fi`

planner/sample_player-clear_generator.o: planner/clear_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-clear_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-clear_generator.Tpo -c -o planner/sample_player-clear_generator.o `test -f 'planner/clear_generator.cpp' || echo '$(srcdir)/'`planner/clear_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-clear_generator.Tpo planner/$(DEPDIR)/sample_player-clear_generator.Po
#	$(AM_V_CXX)source='planner/clear_generator.cpp' object='planner/sample_player-clear_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-clear_generator.o `test -f 'planner/clear_generator.cpp' || echo '$(srcdir)/'`planner/clear_generator.cpp

planner/sample_player-clear_generator.obj: planner/clear_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-clear_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-clear_generator.Tpo -c -o planner/sample_player-clear_generator.obj `if test -f 'planner/clear_generator.cpp'; then $(CYGPATH_W) 'planner/clear_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/clear_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-clear_generator.Tpo planner/$(DEPDIR)/sample_player-clear_generator.Po
#	$(AM_V_CXX)source='planner/clear_generator.cpp' object='planner/sample_player-clear_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-clear_generator.obj `if test -f 'planner/clear_generator.cpp'; then $(CYGPATH_W) 'planner/clear_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/clear_generator.cpp'; fi`

planner/sample_player-cooperative_action.o: planner/cooperative_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-cooperative_action.o -MD -MP -MF planner/$(DEPDIR)/sample_player-cooperative_action.Tpo -c -o planner/sample_player-cooperative_action.o `test -f 'planner/cooperative_action.cpp' || echo '$(srcdir)/'`planner/cooperative_action.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-cooperative_action.Tpo planner/$(DEPDIR)/sample_player-cooperative_action.Po
#	$(AM_V_CXX)source='planner/cooperative_action.cpp' object='planner/sample_player-cooperative_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-cooperative_action.o `test -f 'planner/cooperative_action.cpp' || echo '$(srcdir)/'`planner/cooperative_action.cpp

planner/sample_player-cooperative_action.obj: planner/cooperative_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-cooperative_action.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-cooperative_action.Tpo -c -o planner/sample_player-cooperative_action.obj `if test -f 'planner/cooperative_action.cpp'; then $(CYGPATH_W) 'planner/cooperative_action.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/cooperative_action.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-cooperative_action.Tpo planner/$(DEPDIR)/sample_player-cooperative_action.Po
#	$(AM_V_CXX)source='planner/cooperative_action.cpp' object='planner/sample_player-cooperative_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-cooperative_action.obj `if test -f 'planner/cooperative_action.cpp'; then $(CYGPATH_W) 'planner/cooperative_action.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/cooperative_action.cpp'; fi`

planner/sample_player-cross_generator.o: planner/cross_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-cross_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-cross_generator.Tpo -c -o planner/sample_player-cross_generator.o `test -f 'planner/cross_generator.cpp' || echo '$(srcdir)/'`planner/cross_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-cross_generator.Tpo planner/$(DEPDIR)/sample_player-cross_generator.Po
#	$(AM_V_CXX)source='planner/cross_generator.cpp' object='planner/sample_player-cross_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-cross_generator.o `test -f 'planner/cross_generator.cpp' || echo '$(srcdir)/'`planner/cross_generator.cpp

planner/sample_player-cross_generator.obj: planner/cross_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-cross_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-cross_generator.Tpo -c -o planner/sample_player-cross_generator.obj `if test -f 'planner/cross_generator.cpp'; then $(CYGPATH_W) 'planner/cross_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/cross_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-cross_generator.Tpo planner/$(DEPDIR)/sample_player-cross_generator.Po
#	$(AM_V_CXX)source='planner/cross_generator.cpp' object='planner/sample_player-cross_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-cross_generator.obj `if test -f 'planner/cross_generator.cpp'; then $(CYGPATH_W) 'planner/cross_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/cross_generator.cpp'; fi`

planner/sample_player-dribble.o: planner/dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-dribble.o -MD -MP -MF planner/$(DEPDIR)/sample_player-dribble.Tpo -c -o planner/sample_player-dribble.o `test -f 'planner/dribble.cpp' || echo '$(srcdir)/'`planner/dribble.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-dribble.Tpo planner/$(DEPDIR)/sample_player-dribble.Po
#	$(AM_V_CXX)source='planner/dribble.cpp' object='planner/sample_player-dribble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-dribble.o `test -f 'planner/dribble.cpp' || echo '$(srcdir)/'`planner/dribble.cpp

planner/sample_player-dribble.obj: planner/dribble.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-dribble.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-dribble.Tpo -c -o planner/sample_player-dribble.obj `if test -f 'planner/dribble.cpp'; then $(CYGPATH_W) 'planner/dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/dribble.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-dribble.Tpo planner/$(DEPDIR)/sample_player-dribble.Po
#	$(AM_V_CXX)source='planner/dribble.cpp' object='planner/sample_player-dribble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-dribble.obj `if test -f 'planner/dribble.cpp'; then $(CYGPATH_W) 'planner/dribble.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/dribble.cpp'; fi`

planner/sample_player-field_analyzer.o: planner/field_analyzer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-field_analyzer.o -MD -MP -MF planner/$(DEPDIR)/sample_player-field_analyzer.Tpo -c -o planner/sample_player-field_analyzer.o `test -f 'planner/field_analyzer.cpp' || echo '$(srcdir)/'`planner/field_analyzer.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-field_analyzer.Tpo planner/$(DEPDIR)/sample_player-field_analyzer.Po
#	$(AM_V_CXX)source='planner/field_analyzer.cpp' object='planner/sample_player-field_analyzer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-field_analyzer.o `test -f 'planner/field_analyzer.cpp' || echo '$(srcdir)/'`planner/field_analyzer.cpp

planner/sample_player-field_analyzer.obj: planner/field_analyzer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-field_analyzer.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-field_analyzer.Tpo -c -o planner/sample_player-field_analyzer.obj `if test -f 'planner/field_analyzer.cpp'; then $(CYGPATH_W) 'planner/field_analyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/field_analyzer.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-field_analyzer.Tpo planner/$(DEPDIR)/sample_player-field_analyzer.Po
#	$(AM_V_CXX)source='planner/field_analyzer.cpp' object='planner/sample_player-field_analyzer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-field_analyzer.obj `if test -f 'planner/field_analyzer.cpp'; then $(CYGPATH_W) 'planner/field_analyzer.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/field_analyzer.cpp'; fi`

planner/sample_player-hold_ball.o: planner/hold_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-hold_ball.o -MD -MP -MF planner/$(DEPDIR)/sample_player-hold_ball.Tpo -c -o planner/sample_player-hold_ball.o `test -f 'planner/hold_ball.cpp' || echo '$(srcdir)/'`planner/hold_ball.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-hold_ball.Tpo planner/$(DEPDIR)/sample_player-hold_ball.Po
#	$(AM_V_CXX)source='planner/hold_ball.cpp' object='planner/sample_player-hold_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-hold_ball.o `test -f 'planner/hold_ball.cpp' || echo '$(srcdir)/'`planner/hold_ball.cpp

planner/sample_player-hold_ball.obj: planner/hold_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-hold_ball.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-hold_ball.Tpo -c -o planner/sample_player-hold_ball.obj `if test -f 'planner/hold_ball.cpp'; then $(CYGPATH_W) 'planner/hold_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/hold_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-hold_ball.Tpo planner/$(DEPDIR)/sample_player-hold_ball.Po
#	$(AM_V_CXX)source='planner/hold_ball.cpp' object='planner/sample_player-hold_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-hold_ball.obj `if test -f 'planner/hold_ball.cpp'; then $(CYGPATH_W) 'planner/hold_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/hold_ball.cpp'; fi`

planner/sample_player-neck_turn_to_receiver.o: planner/neck_turn_to_receiver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-neck_turn_to_receiver.o -MD -MP -MF planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Tpo -c -o planner/sample_player-neck_turn_to_receiver.o `test -f 'planner/neck_turn_to_receiver.cpp' || echo '$(srcdir)/'`planner/neck_turn_to_receiver.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Tpo planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po
#	$(AM_V_CXX)source='planner/neck_turn_to_receiver.cpp' object='planner/sample_player-neck_turn_to_receiver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-neck_turn_to_receiver.o `test -f 'planner/neck_turn_to_receiver.cpp' || echo '$(srcdir)/'`planner/neck_turn_to_receiver.cpp

planner/sample_player-neck_turn_to_receiver.obj: planner/neck_turn_to_receiver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-neck_turn_to_receiver.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Tpo -c -o planner/sample_player-neck_turn_to_receiver.obj `if test -f 'planner/neck_turn_to_receiver.cpp'; then $(CYGPATH_W) 'planner/neck_turn_to_receiver.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/neck_turn_to_receiver.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Tpo planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po
#	$(AM_V_CXX)source='planner/neck_turn_to_receiver.cpp' object='planner/sample_player-neck_turn_to_receiver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-neck_turn_to_receiver.obj `if test -f 'planner/neck_turn_to_receiver.cpp'; then $(CYGPATH_W) 'planner/neck_turn_to_receiver.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/neck_turn_to_receiver.cpp'; fi`

planner/sample_player-pass.o: planner/pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-pass.o -MD -MP -MF planner/$(DEPDIR)/sample_player-pass.Tpo -c -o planner/sample_player-pass.o `test -f 'planner/pass.cpp' || echo '$(srcdir)/'`planner/pass.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-pass.Tpo planner/$(DEPDIR)/sample_player-pass.Po
#	$(AM_V_CXX)source='planner/pass.cpp' object='planner/sample_player-pass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-pass.o `test -f 'planner/pass.cpp' || echo '$(srcdir)/'`planner/pass.cpp

planner/sample_player-pass.obj: planner/pass.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-pass.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-pass.Tpo -c -o planner/sample_player-pass.obj `if test -f 'planner/pass.cpp'; then $(CYGPATH_W) 'planner/pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/pass.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-pass.Tpo planner/$(DEPDIR)/sample_player-pass.Po
#	$(AM_V_CXX)source='planner/pass.cpp' object='planner/sample_player-pass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-pass.obj `if test -f 'planner/pass.cpp'; then $(CYGPATH_W) 'planner/pass.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/pass.cpp'; fi`

planner/sample_player-predict_state.o: planner/predict_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-predict_state.o -MD -MP -MF planner/$(DEPDIR)/sample_player-predict_state.Tpo -c -o planner/sample_player-predict_state.o `test -f 'planner/predict_state.cpp' || echo '$(srcdir)/'`planner/predict_state.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-predict_state.Tpo planner/$(DEPDIR)/sample_player-predict_state.Po
#	$(AM_V_CXX)source='planner/predict_state.cpp' object='planner/sample_player-predict_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-predict_state.o `test -f 'planner/predict_state.cpp' || echo '$(srcdir)/'`planner/predict_state.cpp

planner/sample_player-predict_state.obj: planner/predict_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-predict_state.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-predict_state.Tpo -c -o planner/sample_player-predict_state.obj `if test -f 'planner/predict_state.cpp'; then $(CYGPATH_W) 'planner/predict_state.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/predict_state.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-predict_state.Tpo planner/$(DEPDIR)/sample_player-predict_state.Po
#	$(AM_V_CXX)source='planner/predict_state.cpp' object='planner/sample_player-predict_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-predict_state.obj `if test -f 'planner/predict_state.cpp'; then $(CYGPATH_W) 'planner/predict_state.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/predict_state.cpp'; fi`

planner/sample_player-self_pass_generator.o: planner/self_pass_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-self_pass_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-self_pass_generator.Tpo -c -o planner/sample_player-self_pass_generator.o `test -f 'planner/self_pass_generator.cpp' || echo '$(srcdir)/'`planner/self_pass_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-self_pass_generator.Tpo planner/$(DEPDIR)/sample_player-self_pass_generator.Po
#	$(AM_V_CXX)source='planner/self_pass_generator.cpp' object='planner/sample_player-self_pass_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-self_pass_generator.o `test -f 'planner/self_pass_generator.cpp' || echo '$(srcdir)/'`planner/self_pass_generator.cpp

planner/sample_player-self_pass_generator.obj: planner/self_pass_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-self_pass_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-self_pass_generator.Tpo -c -o planner/sample_player-self_pass_generator.obj `if test -f 'planner/self_pass_generator.cpp'; then $(CYGPATH_W) 'planner/self_pass_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/self_pass_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-self_pass_generator.Tpo planner/$(DEPDIR)/sample_player-self_pass_generator.Po
#	$(AM_V_CXX)source='planner/self_pass_generator.cpp' object='planner/sample_player-self_pass_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-self_pass_generator.obj `if test -f 'planner/self_pass_generator.cpp'; then $(CYGPATH_W) 'planner/self_pass_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/self_pass_generator.cpp'; fi`

planner/sample_player-shoot.o: planner/shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-shoot.o -MD -MP -MF planner/$(DEPDIR)/sample_player-shoot.Tpo -c -o planner/sample_player-shoot.o `test -f 'planner/shoot.cpp' || echo '$(srcdir)/'`planner/shoot.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-shoot.Tpo planner/$(DEPDIR)/sample_player-shoot.Po
#	$(AM_V_CXX)source='planner/shoot.cpp' object='planner/sample_player-shoot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-shoot.o `test -f 'planner/shoot.cpp' || echo '$(srcdir)/'`planner/shoot.cpp

planner/sample_player-shoot.obj: planner/shoot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-shoot.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-shoot.Tpo -c -o planner/sample_player-shoot.obj `if test -f 'planner/shoot.cpp'; then $(CYGPATH_W) 'planner/shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/shoot.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-shoot.Tpo planner/$(DEPDIR)/sample_player-shoot.Po
#	$(AM_V_CXX)source='planner/shoot.cpp' object='planner/sample_player-shoot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-shoot.obj `if test -f 'planner/shoot.cpp'; then $(CYGPATH_W) 'planner/shoot.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/shoot.cpp'; fi`

planner/sample_player-shoot_generator.o: planner/shoot_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-shoot_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-shoot_generator.Tpo -c -o planner/sample_player-shoot_generator.o `test -f 'planner/shoot_generator.cpp' || echo '$(srcdir)/'`planner/shoot_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-shoot_generator.Tpo planner/$(DEPDIR)/sample_player-shoot_generator.Po
#	$(AM_V_CXX)source='planner/shoot_generator.cpp' object='planner/sample_player-shoot_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-shoot_generator.o `test -f 'planner/shoot_generator.cpp' || echo '$(srcdir)/'`planner/shoot_generator.cpp

planner/sample_player-shoot_generator.obj: planner/shoot_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-shoot_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-shoot_generator.Tpo -c -o planner/sample_player-shoot_generator.obj `if test -f 'planner/shoot_generator.cpp'; then $(CYGPATH_W) 'planner/shoot_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/shoot_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-shoot_generator.Tpo planner/$(DEPDIR)/sample_player-shoot_generator.Po
#	$(AM_V_CXX)source='planner/shoot_generator.cpp' object='planner/sample_player-shoot_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-shoot_generator.obj `if test -f 'planner/shoot_generator.cpp'; then $(CYGPATH_W) 'planner/shoot_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/shoot_generator.cpp'; fi`

planner/sample_player-short_dribble_generator.o: planner/short_dribble_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-short_dribble_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-short_dribble_generator.Tpo -c -o planner/sample_player-short_dribble_generator.o `test -f 'planner/short_dribble_generator.cpp' || echo '$(srcdir)/'`planner/short_dribble_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-short_dribble_generator.Tpo planner/$(DEPDIR)/sample_player-short_dribble_generator.Po
#	$(AM_V_CXX)source='planner/short_dribble_generator.cpp' object='planner/sample_player-short_dribble_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-short_dribble_generator.o `test -f 'planner/short_dribble_generator.cpp' || echo '$(srcdir)/'`planner/short_dribble_generator.cpp

planner/sample_player-short_dribble_generator.obj: planner/short_dribble_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-short_dribble_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-short_dribble_generator.Tpo -c -o planner/sample_player-short_dribble_generator.obj `if test -f 'planner/short_dribble_generator.cpp'; then $(CYGPATH_W) 'planner/short_dribble_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/short_dribble_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-short_dribble_generator.Tpo planner/$(DEPDIR)/sample_player-short_dribble_generator.Po
#	$(AM_V_CXX)source='planner/short_dribble_generator.cpp' object='planner/sample_player-short_dribble_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-short_dribble_generator.obj `if test -f 'planner/short_dribble_generator.cpp'; then $(CYGPATH_W) 'planner/short_dribble_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/short_dribble_generator.cpp'; fi`

planner/sample_player-simple_pass_checker.o: planner/simple_pass_checker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-simple_pass_checker.o -MD -MP -MF planner/$(DEPDIR)/sample_player-simple_pass_checker.Tpo -c -o planner/sample_player-simple_pass_checker.o `test -f 'planner/simple_pass_checker.cpp' || echo '$(srcdir)/'`planner/simple_pass_checker.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-simple_pass_checker.Tpo planner/$(DEPDIR)/sample_player-simple_pass_checker.Po
#	$(AM_V_CXX)source='planner/simple_pass_checker.cpp' object='planner/sample_player-simple_pass_checker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-simple_pass_checker.o `test -f 'planner/simple_pass_checker.cpp' || echo '$(srcdir)/'`planner/simple_pass_checker.cpp

planner/sample_player-simple_pass_checker.obj: planner/simple_pass_checker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-simple_pass_checker.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-simple_pass_checker.Tpo -c -o planner/sample_player-simple_pass_checker.obj `if test -f 'planner/simple_pass_checker.cpp'; then $(CYGPATH_W) 'planner/simple_pass_checker.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/simple_pass_checker.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-simple_pass_checker.Tpo planner/$(DEPDIR)/sample_player-simple_pass_checker.Po
#	$(AM_V_CXX)source='planner/simple_pass_checker.cpp' object='planner/sample_player-simple_pass_checker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-simple_pass_checker.obj `if test -f 'planner/simple_pass_checker.cpp'; then $(CYGPATH_W) 'planner/simple_pass_checker.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/simple_pass_checker.cpp'; fi`

planner/sample_player-strict_check_pass_generator.o: planner/strict_check_pass_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-strict_check_pass_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Tpo -c -o planner/sample_player-strict_check_pass_generator.o `test -f 'planner/strict_check_pass_generator.cpp' || echo '$(srcdir)/'`planner/strict_check_pass_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Tpo planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po
#	$(AM_V_CXX)source='planner/strict_check_pass_generator.cpp' object='planner/sample_player-strict_check_pass_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-strict_check_pass_generator.o `test -f 'planner/strict_check_pass_generator.cpp' || echo '$(srcdir)/'`planner/strict_check_pass_generator.cpp

planner/sample_player-strict_check_pass_generator.obj: planner/strict_check_pass_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-strict_check_pass_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Tpo -c -o planner/sample_player-strict_check_pass_generator.obj `if test -f 'planner/strict_check_pass_generator.cpp'; then $(CYGPATH_W) 'planner/strict_check_pass_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/strict_check_pass_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Tpo planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po
#	$(AM_V_CXX)source='planner/strict_check_pass_generator.cpp' object='planner/sample_player-strict_check_pass_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-strict_check_pass_generator.obj `if test -f 'planner/strict_check_pass_generator.cpp'; then $(CYGPATH_W) 'planner/strict_check_pass_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/strict_check_pass_generator.cpp'; fi`

planner/sample_player-tackle_generator.o: planner/tackle_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-tackle_generator.o -MD -MP -MF planner/$(DEPDIR)/sample_player-tackle_generator.Tpo -c -o planner/sample_player-tackle_generator.o `test -f 'planner/tackle_generator.cpp' || echo '$(srcdir)/'`planner/tackle_generator.cpp
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-tackle_generator.Tpo planner/$(DEPDIR)/sample_player-tackle_generator.Po
#	$(AM_V_CXX)source='planner/tackle_generator.cpp' object='planner/sample_player-tackle_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-tackle_generator.o `test -f 'planner/tackle_generator.cpp' || echo '$(srcdir)/'`planner/tackle_generator.cpp

planner/sample_player-tackle_generator.obj: planner/tackle_generator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT planner/sample_player-tackle_generator.obj -MD -MP -MF planner/$(DEPDIR)/sample_player-tackle_generator.Tpo -c -o planner/sample_player-tackle_generator.obj `if test -f 'planner/tackle_generator.cpp'; then $(CYGPATH_W) 'planner/tackle_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/tackle_generator.cpp'; fi`
	$(AM_V_at)$(am__mv) planner/$(DEPDIR)/sample_player-tackle_generator.Tpo planner/$(DEPDIR)/sample_player-tackle_generator.Po
#	$(AM_V_CXX)source='planner/tackle_generator.cpp' object='planner/sample_player-tackle_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o planner/sample_player-tackle_generator.obj `if test -f 'planner/tackle_generator.cpp'; then $(CYGPATH_W) 'planner/tackle_generator.cpp'; else $(CYGPATH_W) '$(srcdir)/planner/tackle_generator.cpp'; fi`

setplay/sample_player-bhv_go_to_placed_ball.o: setplay/bhv_go_to_placed_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_go_to_placed_ball.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Tpo -c -o setplay/sample_player-bhv_go_to_placed_ball.o `test -f 'setplay/bhv_go_to_placed_ball.cpp' || echo '$(srcdir)/'`setplay/bhv_go_to_placed_ball.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Tpo setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po
#	$(AM_V_CXX)source='setplay/bhv_go_to_placed_ball.cpp' object='setplay/sample_player-bhv_go_to_placed_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_go_to_placed_ball.o `test -f 'setplay/bhv_go_to_placed_ball.cpp' || echo '$(srcdir)/'`setplay/bhv_go_to_placed_ball.cpp

setplay/sample_player-bhv_go_to_placed_ball.obj: setplay/bhv_go_to_placed_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_go_to_placed_ball.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Tpo -c -o setplay/sample_player-bhv_go_to_placed_ball.obj `if test -f 'setplay/bhv_go_to_placed_ball.cpp'; then $(CYGPATH_W) 'setplay/bhv_go_to_placed_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_go_to_placed_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Tpo setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po
#	$(AM_V_CXX)source='setplay/bhv_go_to_placed_ball.cpp' object='setplay/sample_player-bhv_go_to_placed_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_go_to_placed_ball.obj `if test -f 'setplay/bhv_go_to_placed_ball.cpp'; then $(CYGPATH_W) 'setplay/bhv_go_to_placed_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_go_to_placed_ball.cpp'; fi`

setplay/sample_player-bhv_prepare_set_play_kick.o: setplay/bhv_prepare_set_play_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_prepare_set_play_kick.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Tpo -c -o setplay/sample_player-bhv_prepare_set_play_kick.o `test -f 'setplay/bhv_prepare_set_play_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_prepare_set_play_kick.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_prepare_set_play_kick.cpp' object='setplay/sample_player-bhv_prepare_set_play_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_prepare_set_play_kick.o `test -f 'setplay/bhv_prepare_set_play_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_prepare_set_play_kick.cpp

setplay/sample_player-bhv_prepare_set_play_kick.obj: setplay/bhv_prepare_set_play_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_prepare_set_play_kick.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Tpo -c -o setplay/sample_player-bhv_prepare_set_play_kick.obj `if test -f 'setplay/bhv_prepare_set_play_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_prepare_set_play_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_prepare_set_play_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_prepare_set_play_kick.cpp' object='setplay/sample_player-bhv_prepare_set_play_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_prepare_set_play_kick.obj `if test -f 'setplay/bhv_prepare_set_play_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_prepare_set_play_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_prepare_set_play_kick.cpp'; fi`

setplay/sample_player-bhv_set_play.o: setplay/bhv_set_play.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play.Tpo -c -o setplay/sample_player-bhv_set_play.o `test -f 'setplay/bhv_set_play.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play.cpp' object='setplay/sample_player-bhv_set_play.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play.o `test -f 'setplay/bhv_set_play.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play.cpp

setplay/sample_player-bhv_set_play.obj: setplay/bhv_set_play.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play.Tpo -c -o setplay/sample_player-bhv_set_play.obj `if test -f 'setplay/bhv_set_play.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play.cpp' object='setplay/sample_player-bhv_set_play.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play.obj `if test -f 'setplay/bhv_set_play.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play.cpp'; fi`

setplay/sample_player-bhv_set_play_free_kick.o: setplay/bhv_set_play_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_free_kick.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Tpo -c -o setplay/sample_player-bhv_set_play_free_kick.o `test -f 'setplay/bhv_set_play_free_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_free_kick.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_free_kick.cpp' object='setplay/sample_player-bhv_set_play_free_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_free_kick.o `test -f 'setplay/bhv_set_play_free_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_free_kick.cpp

setplay/sample_player-bhv_set_play_free_kick.obj: setplay/bhv_set_play_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_free_kick.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Tpo -c -o setplay/sample_player-bhv_set_play_free_kick.obj `if test -f 'setplay/bhv_set_play_free_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_free_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_free_kick.cpp' object='setplay/sample_player-bhv_set_play_free_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_free_kick.obj `if test -f 'setplay/bhv_set_play_free_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_free_kick.cpp'; fi`

setplay/sample_player-bhv_set_play_goal_kick.o: setplay/bhv_set_play_goal_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_goal_kick.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Tpo -c -o setplay/sample_player-bhv_set_play_goal_kick.o `test -f 'setplay/bhv_set_play_goal_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_goal_kick.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_goal_kick.cpp' object='setplay/sample_player-bhv_set_play_goal_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_goal_kick.o `test -f 'setplay/bhv_set_play_goal_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_goal_kick.cpp

setplay/sample_player-bhv_set_play_goal_kick.obj: setplay/bhv_set_play_goal_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_goal_kick.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Tpo -c -o setplay/sample_player-bhv_set_play_goal_kick.obj `if test -f 'setplay/bhv_set_play_goal_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_goal_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_goal_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_goal_kick.cpp' object='setplay/sample_player-bhv_set_play_goal_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_goal_kick.obj `if test -f 'setplay/bhv_set_play_goal_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_goal_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_goal_kick.cpp'; fi`

setplay/sample_player-bhv_set_play_indirect_free_kick.o: setplay/bhv_set_play_indirect_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_indirect_free_kick.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Tpo -c -o setplay/sample_player-bhv_set_play_indirect_free_kick.o `test -f 'setplay/bhv_set_play_indirect_free_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_indirect_free_kick.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_indirect_free_kick.cpp' object='setplay/sample_player-bhv_set_play_indirect_free_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_indirect_free_kick.o `test -f 'setplay/bhv_set_play_indirect_free_kick.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_indirect_free_kick.cpp

setplay/sample_player-bhv_set_play_indirect_free_kick.obj: setplay/bhv_set_play_indirect_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_indirect_free_kick.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Tpo -c -o setplay/sample_player-bhv_set_play_indirect_free_kick.obj `if test -f 'setplay/bhv_set_play_indirect_free_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_indirect_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_indirect_free_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_indirect_free_kick.cpp' object='setplay/sample_player-bhv_set_play_indirect_free_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_indirect_free_kick.obj `if test -f 'setplay/bhv_set_play_indirect_free_kick.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_indirect_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_indirect_free_kick.cpp'; fi`

setplay/sample_player-bhv_set_play_kick_in.o: setplay/bhv_set_play_kick_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_kick_in.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Tpo -c -o setplay/sample_player-bhv_set_play_kick_in.o `test -f 'setplay/bhv_set_play_kick_in.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_kick_in.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_kick_in.cpp' object='setplay/sample_player-bhv_set_play_kick_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_kick_in.o `test -f 'setplay/bhv_set_play_kick_in.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_kick_in.cpp

setplay/sample_player-bhv_set_play_kick_in.obj: setplay/bhv_set_play_kick_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_kick_in.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Tpo -c -o setplay/sample_player-bhv_set_play_kick_in.obj `if test -f 'setplay/bhv_set_play_kick_in.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_kick_in.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_kick_in.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_kick_in.cpp' object='setplay/sample_player-bhv_set_play_kick_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_kick_in.obj `if test -f 'setplay/bhv_set_play_kick_in.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_kick_in.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_kick_in.cpp'; fi`

setplay/sample_player-bhv_set_play_kick_off.o: setplay/bhv_set_play_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_kick_off.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Tpo -c -o setplay/sample_player-bhv_set_play_kick_off.o `test -f 'setplay/bhv_set_play_kick_off.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_kick_off.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_kick_off.cpp' object='setplay/sample_player-bhv_set_play_kick_off.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_kick_off.o `test -f 'setplay/bhv_set_play_kick_off.cpp' || echo '$(srcdir)/'`setplay/bhv_set_play_kick_off.cpp

setplay/sample_player-bhv_set_play_kick_off.obj: setplay/bhv_set_play_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_set_play_kick_off.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Tpo -c -o setplay/sample_player-bhv_set_play_kick_off.obj `if test -f 'setplay/bhv_set_play_kick_off.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_kick_off.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Tpo setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po
#	$(AM_V_CXX)source='setplay/bhv_set_play_kick_off.cpp' object='setplay/sample_player-bhv_set_play_kick_off.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_set_play_kick_off.obj `if test -f 'setplay/bhv_set_play_kick_off.cpp'; then $(CYGPATH_W) 'setplay/bhv_set_play_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_set_play_kick_off.cpp'; fi`

setplay/sample_player-bhv_their_goal_kick_move.o: setplay/bhv_their_goal_kick_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_their_goal_kick_move.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Tpo -c -o setplay/sample_player-bhv_their_goal_kick_move.o `test -f 'setplay/bhv_their_goal_kick_move.cpp' || echo '$(srcdir)/'`setplay/bhv_their_goal_kick_move.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Tpo setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po
#	$(AM_V_CXX)source='setplay/bhv_their_goal_kick_move.cpp' object='setplay/sample_player-bhv_their_goal_kick_move.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_their_goal_kick_move.o `test -f 'setplay/bhv_their_goal_kick_move.cpp' || echo '$(srcdir)/'`setplay/bhv_their_goal_kick_move.cpp

setplay/sample_player-bhv_their_goal_kick_move.obj: setplay/bhv_their_goal_kick_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-bhv_their_goal_kick_move.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Tpo -c -o setplay/sample_player-bhv_their_goal_kick_move.obj `if test -f 'setplay/bhv_their_goal_kick_move.cpp'; then $(CYGPATH_W) 'setplay/bhv_their_goal_kick_move.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_their_goal_kick_move.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Tpo setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po
#	$(AM_V_CXX)source='setplay/bhv_their_goal_kick_move.cpp' object='setplay/sample_player-bhv_their_goal_kick_move.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-bhv_their_goal_kick_move.obj `if test -f 'setplay/bhv_their_goal_kick_move.cpp'; then $(CYGPATH_W) 'setplay/bhv_their_goal_kick_move.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/bhv_their_goal_kick_move.cpp'; fi`

setplay/sample_player-intention_wait_after_set_play_kick.o: setplay/intention_wait_after_set_play_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-intention_wait_after_set_play_kick.o -MD -MP -MF setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Tpo -c -o setplay/sample_player-intention_wait_after_set_play_kick.o `test -f 'setplay/intention_wait_after_set_play_kick.cpp' || echo '$(srcdir)/'`setplay/intention_wait_after_set_play_kick.cpp
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Tpo setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po
#	$(AM_V_CXX)source='setplay/intention_wait_after_set_play_kick.cpp' object='setplay/sample_player-intention_wait_after_set_play_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-intention_wait_after_set_play_kick.o `test -f 'setplay/intention_wait_after_set_play_kick.cpp' || echo '$(srcdir)/'`setplay/intention_wait_after_set_play_kick.cpp

setplay/sample_player-intention_wait_after_set_play_kick.obj: setplay/intention_wait_after_set_play_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT setplay/sample_player-intention_wait_after_set_play_kick.obj -MD -MP -MF setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Tpo -c -o setplay/sample_player-intention_wait_after_set_play_kick.obj `if test -f 'setplay/intention_wait_after_set_play_kick.cpp'; then $(CYGPATH_W) 'setplay/intention_wait_after_set_play_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/intention_wait_after_set_play_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Tpo setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po
#	$(AM_V_CXX)source='setplay/intention_wait_after_set_play_kick.cpp' object='setplay/sample_player-intention_wait_after_set_play_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o setplay/sample_player-intention_wait_after_set_play_kick.obj `if test -f 'setplay/intention_wait_after_set_play_kick.cpp'; then $(CYGPATH_W) 'setplay/intention_wait_after_set_play_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/setplay/intention_wait_after_set_play_kick.cpp'; fi`

sample_player-bhv_basic_move.o: bhv_basic_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_move.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_move.Tpo -c -o sample_player-bhv_basic_move.o `test -f 'bhv_basic_move.cpp' || echo '$(srcdir)/'`bhv_basic_move.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_move.Tpo $(DEPDIR)/sample_player-bhv_basic_move.Po
#	$(AM_V_CXX)source='bhv_basic_move.cpp' object='sample_player-bhv_basic_move.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_move.o `test -f 'bhv_basic_move.cpp' || echo '$(srcdir)/'`bhv_basic_move.cpp

sample_player-bhv_basic_move.obj: bhv_basic_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_move.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_move.Tpo -c -o sample_player-bhv_basic_move.obj `if test -f 'bhv_basic_move.cpp'; then $(CYGPATH_W) 'bhv_basic_move.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_move.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_move.Tpo $(DEPDIR)/sample_player-bhv_basic_move.Po
#	$(AM_V_CXX)source='bhv_basic_move.cpp' object='sample_player-bhv_basic_move.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_move.obj `if test -f 'bhv_basic_move.cpp'; then $(CYGPATH_W) 'bhv_basic_move.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_move.cpp'; fi`

sample_player-bhv_basic_block.o: bhv_basic_block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_block.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_block.Tpo -c -o sample_player-bhv_basic_block.o `test -f 'bhv_basic_block.cpp' || echo '$(srcdir)/'`bhv_basic_block.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_block.Tpo $(DEPDIR)/sample_player-bhv_basic_block.Po
#	$(AM_V_CXX)source='bhv_basic_block.cpp' object='sample_player-bhv_basic_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_block.o `test -f 'bhv_basic_block.cpp' || echo '$(srcdir)/'`bhv_basic_block.cpp

sample_player-bhv_basic_block.obj: bhv_basic_block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_block.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_block.Tpo -c -o sample_player-bhv_basic_block.obj `if test -f 'bhv_basic_block.cpp'; then $(CYGPATH_W) 'bhv_basic_block.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_block.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_block.Tpo $(DEPDIR)/sample_player-bhv_basic_block.Po
#	$(AM_V_CXX)source='bhv_basic_block.cpp' object='sample_player-bhv_basic_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_block.obj `if test -f 'bhv_basic_block.cpp'; then $(CYGPATH_W) 'bhv_basic_block.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_block.cpp'; fi`

sample_player-bhv_unmark.o: bhv_unmark.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_unmark.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_unmark.Tpo -c -o sample_player-bhv_unmark.o `test -f 'bhv_unmark.cpp' || echo '$(srcdir)/'`bhv_unmark.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_unmark.Tpo $(DEPDIR)/sample_player-bhv_unmark.Po
#	$(AM_V_CXX)source='bhv_unmark.cpp' object='sample_player-bhv_unmark.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_unmark.o `test -f 'bhv_unmark.cpp' || echo '$(srcdir)/'`bhv_unmark.cpp

sample_player-bhv_unmark.obj: bhv_unmark.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_unmark.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_unmark.Tpo -c -o sample_player-bhv_unmark.obj `if test -f 'bhv_unmark.cpp'; then $(CYGPATH_W) 'bhv_unmark.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_unmark.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_unmark.Tpo $(DEPDIR)/sample_player-bhv_unmark.Po
#	$(AM_V_CXX)source='bhv_unmark.cpp' object='sample_player-bhv_unmark.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_unmark.obj `if test -f 'bhv_unmark.cpp'; then $(CYGPATH_W) 'bhv_unmark.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_unmark.cpp'; fi`

sample_player-bhv_basic_tackle.o: bhv_basic_tackle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_tackle.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_tackle.Tpo -c -o sample_player-bhv_basic_tackle.o `test -f 'bhv_basic_tackle.cpp' || echo '$(srcdir)/'`bhv_basic_tackle.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_tackle.Tpo $(DEPDIR)/sample_player-bhv_basic_tackle.Po
#	$(AM_V_CXX)source='bhv_basic_tackle.cpp' object='sample_player-bhv_basic_tackle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_tackle.o `test -f 'bhv_basic_tackle.cpp' || echo '$(srcdir)/'`bhv_basic_tackle.cpp

sample_player-bhv_basic_tackle.obj: bhv_basic_tackle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_basic_tackle.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_basic_tackle.Tpo -c -o sample_player-bhv_basic_tackle.obj `if test -f 'bhv_basic_tackle.cpp'; then $(CYGPATH_W) 'bhv_basic_tackle.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_tackle.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_basic_tackle.Tpo $(DEPDIR)/sample_player-bhv_basic_tackle.Po
#	$(AM_V_CXX)source='bhv_basic_tackle.cpp' object='sample_player-bhv_basic_tackle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_basic_tackle.obj `if test -f 'bhv_basic_tackle.cpp'; then $(CYGPATH_W) 'bhv_basic_tackle.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_basic_tackle.cpp'; fi`

sample_player-bhv_custom_before_kick_off.o: bhv_custom_before_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_custom_before_kick_off.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Tpo -c -o sample_player-bhv_custom_before_kick_off.o `test -f 'bhv_custom_before_kick_off.cpp' || echo '$(srcdir)/'`bhv_custom_before_kick_off.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Tpo $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po
#	$(AM_V_CXX)source='bhv_custom_before_kick_off.cpp' object='sample_player-bhv_custom_before_kick_off.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_custom_before_kick_off.o `test -f 'bhv_custom_before_kick_off.cpp' || echo '$(srcdir)/'`bhv_custom_before_kick_off.cpp

sample_player-bhv_custom_before_kick_off.obj: bhv_custom_before_kick_off.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_custom_before_kick_off.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Tpo -c -o sample_player-bhv_custom_before_kick_off.obj `if test -f 'bhv_custom_before_kick_off.cpp'; then $(CYGPATH_W) 'bhv_custom_before_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_custom_before_kick_off.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Tpo $(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po
#	$(AM_V_CXX)source='bhv_custom_before_kick_off.cpp' object='sample_player-bhv_custom_before_kick_off.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_custom_before_kick_off.obj `if test -f 'bhv_custom_before_kick_off.cpp'; then $(CYGPATH_W) 'bhv_custom_before_kick_off.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_custom_before_kick_off.cpp'; fi`

sample_player-bhv_goalie_basic_move.o: bhv_goalie_basic_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_basic_move.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_basic_move.Tpo -c -o sample_player-bhv_goalie_basic_move.o `test -f 'bhv_goalie_basic_move.cpp' || echo '$(srcdir)/'`bhv_goalie_basic_move.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_basic_move.Tpo $(DEPDIR)/sample_player-bhv_goalie_basic_move.Po
#	$(AM_V_CXX)source='bhv_goalie_basic_move.cpp' object='sample_player-bhv_goalie_basic_move.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_basic_move.o `test -f 'bhv_goalie_basic_move.cpp' || echo '$(srcdir)/'`bhv_goalie_basic_move.cpp

sample_player-bhv_goalie_basic_move.obj: bhv_goalie_basic_move.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_basic_move.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_basic_move.Tpo -c -o sample_player-bhv_goalie_basic_move.obj `if test -f 'bhv_goalie_basic_move.cpp'; then $(CYGPATH_W) 'bhv_goalie_basic_move.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_basic_move.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_basic_move.Tpo $(DEPDIR)/sample_player-bhv_goalie_basic_move.Po
#	$(AM_V_CXX)source='bhv_goalie_basic_move.cpp' object='sample_player-bhv_goalie_basic_move.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_basic_move.obj `if test -f 'bhv_goalie_basic_move.cpp'; then $(CYGPATH_W) 'bhv_goalie_basic_move.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_basic_move.cpp'; fi`

sample_player-bhv_goalie_chase_ball.o: bhv_goalie_chase_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_chase_ball.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Tpo -c -o sample_player-bhv_goalie_chase_ball.o `test -f 'bhv_goalie_chase_ball.cpp' || echo '$(srcdir)/'`bhv_goalie_chase_ball.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Tpo $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po
#	$(AM_V_CXX)source='bhv_goalie_chase_ball.cpp' object='sample_player-bhv_goalie_chase_ball.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_chase_ball.o `test -f 'bhv_goalie_chase_ball.cpp' || echo '$(srcdir)/'`bhv_goalie_chase_ball.cpp

sample_player-bhv_goalie_chase_ball.obj: bhv_goalie_chase_ball.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_chase_ball.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Tpo -c -o sample_player-bhv_goalie_chase_ball.obj `if test -f 'bhv_goalie_chase_ball.cpp'; then $(CYGPATH_W) 'bhv_goalie_chase_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_chase_ball.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Tpo $(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po
#	$(AM_V_CXX)source='bhv_goalie_chase_ball.cpp' object='sample_player-bhv_goalie_chase_ball.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_chase_ball.obj `if test -f 'bhv_goalie_chase_ball.cpp'; then $(CYGPATH_W) 'bhv_goalie_chase_ball.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_chase_ball.cpp'; fi`

sample_player-bhv_goalie_free_kick.o: bhv_goalie_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_free_kick.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_free_kick.Tpo -c -o sample_player-bhv_goalie_free_kick.o `test -f 'bhv_goalie_free_kick.cpp' || echo '$(srcdir)/'`bhv_goalie_free_kick.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_free_kick.Tpo $(DEPDIR)/sample_player-bhv_goalie_free_kick.Po
#	$(AM_V_CXX)source='bhv_goalie_free_kick.cpp' object='sample_player-bhv_goalie_free_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_free_kick.o `test -f 'bhv_goalie_free_kick.cpp' || echo '$(srcdir)/'`bhv_goalie_free_kick.cpp

sample_player-bhv_goalie_free_kick.obj: bhv_goalie_free_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_goalie_free_kick.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_goalie_free_kick.Tpo -c -o sample_player-bhv_goalie_free_kick.obj `if test -f 'bhv_goalie_free_kick.cpp'; then $(CYGPATH_W) 'bhv_goalie_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_free_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_goalie_free_kick.Tpo $(DEPDIR)/sample_player-bhv_goalie_free_kick.Po
#	$(AM_V_CXX)source='bhv_goalie_free_kick.cpp' object='sample_player-bhv_goalie_free_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_goalie_free_kick.obj `if test -f 'bhv_goalie_free_kick.cpp'; then $(CYGPATH_W) 'bhv_goalie_free_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_goalie_free_kick.cpp'; fi`

sample_player-bhv_penalty_kick.o: bhv_penalty_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_penalty_kick.o -MD -MP -MF $(DEPDIR)/sample_player-bhv_penalty_kick.Tpo -c -o sample_player-bhv_penalty_kick.o `test -f 'bhv_penalty_kick.cpp' || echo '$(srcdir)/'`bhv_penalty_kick.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_penalty_kick.Tpo $(DEPDIR)/sample_player-bhv_penalty_kick.Po
#	$(AM_V_CXX)source='bhv_penalty_kick.cpp' object='sample_player-bhv_penalty_kick.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_penalty_kick.o `test -f 'bhv_penalty_kick.cpp' || echo '$(srcdir)/'`bhv_penalty_kick.cpp

sample_player-bhv_penalty_kick.obj: bhv_penalty_kick.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-bhv_penalty_kick.obj -MD -MP -MF $(DEPDIR)/sample_player-bhv_penalty_kick.Tpo -c -o sample_player-bhv_penalty_kick.obj `if test -f 'bhv_penalty_kick.cpp'; then $(CYGPATH_W) 'bhv_penalty_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_penalty_kick.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-bhv_penalty_kick.Tpo $(DEPDIR)/sample_player-bhv_penalty_kick.Po
#	$(AM_V_CXX)source='bhv_penalty_kick.cpp' object='sample_player-bhv_penalty_kick.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-bhv_penalty_kick.obj `if test -f 'bhv_penalty_kick.cpp'; then $(CYGPATH_W) 'bhv_penalty_kick.cpp'; else $(CYGPATH_W) '$(srcdir)/bhv_penalty_kick.cpp'; fi`

sample_player-neck_default_intercept_neck.o: neck_default_intercept_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_default_intercept_neck.o -MD -MP -MF $(DEPDIR)/sample_player-neck_default_intercept_neck.Tpo -c -o sample_player-neck_default_intercept_neck.o `test -f 'neck_default_intercept_neck.cpp' || echo '$(srcdir)/'`neck_default_intercept_neck.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_default_intercept_neck.Tpo $(DEPDIR)/sample_player-neck_default_intercept_neck.Po
#	$(AM_V_CXX)source='neck_default_intercept_neck.cpp' object='sample_player-neck_default_intercept_neck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_default_intercept_neck.o `test -f 'neck_default_intercept_neck.cpp' || echo '$(srcdir)/'`neck_default_intercept_neck.cpp

sample_player-neck_default_intercept_neck.obj: neck_default_intercept_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_default_intercept_neck.obj -MD -MP -MF $(DEPDIR)/sample_player-neck_default_intercept_neck.Tpo -c -o sample_player-neck_default_intercept_neck.obj `if test -f 'neck_default_intercept_neck.cpp'; then $(CYGPATH_W) 'neck_default_intercept_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_default_intercept_neck.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_default_intercept_neck.Tpo $(DEPDIR)/sample_player-neck_default_intercept_neck.Po
#	$(AM_V_CXX)source='neck_default_intercept_neck.cpp' object='sample_player-neck_default_intercept_neck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_default_intercept_neck.obj `if test -f 'neck_default_intercept_neck.cpp'; then $(CYGPATH_W) 'neck_default_intercept_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_default_intercept_neck.cpp'; fi`

sample_player-neck_goalie_turn_neck.o: neck_goalie_turn_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_goalie_turn_neck.o -MD -MP -MF $(DEPDIR)/sample_player-neck_goalie_turn_neck.Tpo -c -o sample_player-neck_goalie_turn_neck.o `test -f 'neck_goalie_turn_neck.cpp' || echo '$(srcdir)/'`neck_goalie_turn_neck.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_goalie_turn_neck.Tpo $(DEPDIR)/sample_player-neck_goalie_turn_neck.Po
#	$(AM_V_CXX)source='neck_goalie_turn_neck.cpp' object='sample_player-neck_goalie_turn_neck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_goalie_turn_neck.o `test -f 'neck_goalie_turn_neck.cpp' || echo '$(srcdir)/'`neck_goalie_turn_neck.cpp

sample_player-neck_goalie_turn_neck.obj: neck_goalie_turn_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_goalie_turn_neck.obj -MD -MP -MF $(DEPDIR)/sample_player-neck_goalie_turn_neck.Tpo -c -o sample_player-neck_goalie_turn_neck.obj `if test -f 'neck_goalie_turn_neck.cpp'; then $(CYGPATH_W) 'neck_goalie_turn_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_goalie_turn_neck.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_goalie_turn_neck.Tpo $(DEPDIR)/sample_player-neck_goalie_turn_neck.Po
#	$(AM_V_CXX)source='neck_goalie_turn_neck.cpp' object='sample_player-neck_goalie_turn_neck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_goalie_turn_neck.obj `if test -f 'neck_goalie_turn_neck.cpp'; then $(CYGPATH_W) 'neck_goalie_turn_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_goalie_turn_neck.cpp'; fi`

sample_player-neck_offensive_intercept_neck.o: neck_offensive_intercept_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_offensive_intercept_neck.o -MD -MP -MF $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Tpo -c -o sample_player-neck_offensive_intercept_neck.o `test -f 'neck_offensive_intercept_neck.cpp' || echo '$(srcdir)/'`neck_offensive_intercept_neck.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Tpo $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po
#	$(AM_V_CXX)source='neck_offensive_intercept_neck.cpp' object='sample_player-neck_offensive_intercept_neck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_offensive_intercept_neck.o `test -f 'neck_offensive_intercept_neck.cpp' || echo '$(srcdir)/'`neck_offensive_intercept_neck.cpp

sample_player-neck_offensive_intercept_neck.obj: neck_offensive_intercept_neck.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-neck_offensive_intercept_neck.obj -MD -MP -MF $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Tpo -c -o sample_player-neck_offensive_intercept_neck.obj `if test -f 'neck_offensive_intercept_neck.cpp'; then $(CYGPATH_W) 'neck_offensive_intercept_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_offensive_intercept_neck.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Tpo $(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po
#	$(AM_V_CXX)source='neck_offensive_intercept_neck.cpp' object='sample_player-neck_offensive_intercept_neck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-neck_offensive_intercept_neck.obj `if test -f 'neck_offensive_intercept_neck.cpp'; then $(CYGPATH_W) 'neck_offensive_intercept_neck.cpp'; else $(CYGPATH_W) '$(srcdir)/neck_offensive_intercept_neck.cpp'; fi`

sample_player-view_tactical.o: view_tactical.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-view_tactical.o -MD -MP -MF $(DEPDIR)/sample_player-view_tactical.Tpo -c -o sample_player-view_tactical.o `test -f 'view_tactical.cpp' || echo '$(srcdir)/'`view_tactical.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-view_tactical.Tpo $(DEPDIR)/sample_player-view_tactical.Po
#	$(AM_V_CXX)source='view_tactical.cpp' object='sample_player-view_tactical.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-view_tactical.o `test -f 'view_tactical.cpp' || echo '$(srcdir)/'`view_tactical.cpp

sample_player-view_tactical.obj: view_tactical.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-view_tactical.obj -MD -MP -MF $(DEPDIR)/sample_player-view_tactical.Tpo -c -o sample_player-view_tactical.obj `if test -f 'view_tactical.cpp'; then $(CYGPATH_W) 'view_tactical.cpp'; else $(CYGPATH_W) '$(srcdir)/view_tactical.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-view_tactical.Tpo $(DEPDIR)/sample_player-view_tactical.Po
#	$(AM_V_CXX)source='view_tactical.cpp' object='sample_player-view_tactical.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-view_tactical.obj `if test -f 'view_tactical.cpp'; then $(CYGPATH_W) 'view_tactical.cpp'; else $(CYGPATH_W) '$(srcdir)/view_tactical.cpp'; fi`

sample_player-intention_receive.o: intention_receive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-intention_receive.o -MD -MP -MF $(DEPDIR)/sample_player-intention_receive.Tpo -c -o sample_player-intention_receive.o `test -f 'intention_receive.cpp' || echo '$(srcdir)/'`intention_receive.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-intention_receive.Tpo $(DEPDIR)/sample_player-intention_receive.Po
#	$(AM_V_CXX)source='intention_receive.cpp' object='sample_player-intention_receive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-intention_receive.o `test -f 'intention_receive.cpp' || echo '$(srcdir)/'`intention_receive.cpp

sample_player-intention_receive.obj: intention_receive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-intention_receive.obj -MD -MP -MF $(DEPDIR)/sample_player-intention_receive.Tpo -c -o sample_player-intention_receive.obj `if test -f 'intention_receive.cpp'; then $(CYGPATH_W) 'intention_receive.cpp'; else $(CYGPATH_W) '$(srcdir)/intention_receive.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-intention_receive.Tpo $(DEPDIR)/sample_player-intention_receive.Po
#	$(AM_V_CXX)source='intention_receive.cpp' object='sample_player-intention_receive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-intention_receive.obj `if test -f 'intention_receive.cpp'; then $(CYGPATH_W) 'intention_receive.cpp'; else $(CYGPATH_W) '$(srcdir)/intention_receive.cpp'; fi`

sample_player-intercept_evaluator_sample.o: intercept_evaluator_sample.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-intercept_evaluator_sample.o -MD -MP -MF $(DEPDIR)/sample_player-intercept_evaluator_sample.Tpo -c -o sample_player-intercept_evaluator_sample.o `test -f 'intercept_evaluator_sample.cpp' || echo '$(srcdir)/'`intercept_evaluator_sample.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-intercept_evaluator_sample.Tpo $(DEPDIR)/sample_player-intercept_evaluator_sample.Po
#	$(AM_V_CXX)source='intercept_evaluator_sample.cpp' object='sample_player-intercept_evaluator_sample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-intercept_evaluator_sample.o `test -f 'intercept_evaluator_sample.cpp' || echo '$(srcdir)/'`intercept_evaluator_sample.cpp

sample_player-intercept_evaluator_sample.obj: intercept_evaluator_sample.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-intercept_evaluator_sample.obj -MD -MP -MF $(DEPDIR)/sample_player-intercept_evaluator_sample.Tpo -c -o sample_player-intercept_evaluator_sample.obj `if test -f 'intercept_evaluator_sample.cpp'; then $(CYGPATH_W) 'intercept_evaluator_sample.cpp'; else $(CYGPATH_W) '$(srcdir)/intercept_evaluator_sample.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-intercept_evaluator_sample.Tpo $(DEPDIR)/sample_player-intercept_evaluator_sample.Po
#	$(AM_V_CXX)source='intercept_evaluator_sample.cpp' object='sample_player-intercept_evaluator_sample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-intercept_evaluator_sample.obj `if test -f 'intercept_evaluator_sample.cpp'; then $(CYGPATH_W) 'intercept_evaluator_sample.cpp'; else $(CYGPATH_W) '$(srcdir)/intercept_evaluator_sample.cpp'; fi`

sample_player-soccer_role.o: soccer_role.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-soccer_role.o -MD -MP -MF $(DEPDIR)/sample_player-soccer_role.Tpo -c -o sample_player-soccer_role.o `test -f 'soccer_role.cpp' || echo '$(srcdir)/'`soccer_role.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-soccer_role.Tpo $(DEPDIR)/sample_player-soccer_role.Po
#	$(AM_V_CXX)source='soccer_role.cpp' object='sample_player-soccer_role.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-soccer_role.o `test -f 'soccer_role.cpp' || echo '$(srcdir)/'`soccer_role.cpp

sample_player-soccer_role.obj: soccer_role.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-soccer_role.obj -MD -MP -MF $(DEPDIR)/sample_player-soccer_role.Tpo -c -o sample_player-soccer_role.obj `if test -f 'soccer_role.cpp'; then $(CYGPATH_W) 'soccer_role.cpp'; else $(CYGPATH_W) '$(srcdir)/soccer_role.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-soccer_role.Tpo $(DEPDIR)/sample_player-soccer_role.Po
#	$(AM_V_CXX)source='soccer_role.cpp' object='sample_player-soccer_role.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-soccer_role.obj `if test -f 'soccer_role.cpp'; then $(CYGPATH_W) 'soccer_role.cpp'; else $(CYGPATH_W) '$(srcdir)/soccer_role.cpp'; fi`

sample_player-role_center_back.o: role_center_back.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_center_back.o -MD -MP -MF $(DEPDIR)/sample_player-role_center_back.Tpo -c -o sample_player-role_center_back.o `test -f 'role_center_back.cpp' || echo '$(srcdir)/'`role_center_back.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_center_back.Tpo $(DEPDIR)/sample_player-role_center_back.Po
#	$(AM_V_CXX)source='role_center_back.cpp' object='sample_player-role_center_back.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_center_back.o `test -f 'role_center_back.cpp' || echo '$(srcdir)/'`role_center_back.cpp

sample_player-role_center_back.obj: role_center_back.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_center_back.obj -MD -MP -MF $(DEPDIR)/sample_player-role_center_back.Tpo -c -o sample_player-role_center_back.obj `if test -f 'role_center_back.cpp'; then $(CYGPATH_W) 'role_center_back.cpp'; else $(CYGPATH_W) '$(srcdir)/role_center_back.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_center_back.Tpo $(DEPDIR)/sample_player-role_center_back.Po
#	$(AM_V_CXX)source='role_center_back.cpp' object='sample_player-role_center_back.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_center_back.obj `if test -f 'role_center_back.cpp'; then $(CYGPATH_W) 'role_center_back.cpp'; else $(CYGPATH_W) '$(srcdir)/role_center_back.cpp'; fi`

sample_player-role_center_forward.o: role_center_forward.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_center_forward.o -MD -MP -MF $(DEPDIR)/sample_player-role_center_forward.Tpo -c -o sample_player-role_center_forward.o `test -f 'role_center_forward.cpp' || echo '$(srcdir)/'`role_center_forward.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_center_forward.Tpo $(DEPDIR)/sample_player-role_center_forward.Po
#	$(AM_V_CXX)source='role_center_forward.cpp' object='sample_player-role_center_forward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_center_forward.o `test -f 'role_center_forward.cpp' || echo '$(srcdir)/'`role_center_forward.cpp

sample_player-role_center_forward.obj: role_center_forward.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_center_forward.obj -MD -MP -MF $(DEPDIR)/sample_player-role_center_forward.Tpo -c -o sample_player-role_center_forward.obj `if test -f 'role_center_forward.cpp'; then $(CYGPATH_W) 'role_center_forward.cpp'; else $(CYGPATH_W) '$(srcdir)/role_center_forward.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_center_forward.Tpo $(DEPDIR)/sample_player-role_center_forward.Po
#	$(AM_V_CXX)source='role_center_forward.cpp' object='sample_player-role_center_forward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_center_forward.obj `if test -f 'role_center_forward.cpp'; then $(CYGPATH_W) 'role_center_forward.cpp'; else $(CYGPATH_W) '$(srcdir)/role_center_forward.cpp'; fi`

sample_player-role_defensive_half.o: role_defensive_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_defensive_half.o -MD -MP -MF $(DEPDIR)/sample_player-role_defensive_half.Tpo -c -o sample_player-role_defensive_half.o `test -f 'role_defensive_half.cpp' || echo '$(srcdir)/'`role_defensive_half.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_defensive_half.Tpo $(DEPDIR)/sample_player-role_defensive_half.Po
#	$(AM_V_CXX)source='role_defensive_half.cpp' object='sample_player-role_defensive_half.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_defensive_half.o `test -f 'role_defensive_half.cpp' || echo '$(srcdir)/'`role_defensive_half.cpp

sample_player-role_defensive_half.obj: role_defensive_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_defensive_half.obj -MD -MP -MF $(DEPDIR)/sample_player-role_defensive_half.Tpo -c -o sample_player-role_defensive_half.obj `if test -f 'role_defensive_half.cpp'; then $(CYGPATH_W) 'role_defensive_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_defensive_half.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_defensive_half.Tpo $(DEPDIR)/sample_player-role_defensive_half.Po
#	$(AM_V_CXX)source='role_defensive_half.cpp' object='sample_player-role_defensive_half.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_defensive_half.obj `if test -f 'role_defensive_half.cpp'; then $(CYGPATH_W) 'role_defensive_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_defensive_half.cpp'; fi`

sample_player-role_goalie.o: role_goalie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_goalie.o -MD -MP -MF $(DEPDIR)/sample_player-role_goalie.Tpo -c -o sample_player-role_goalie.o `test -f 'role_goalie.cpp' || echo '$(srcdir)/'`role_goalie.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_goalie.Tpo $(DEPDIR)/sample_player-role_goalie.Po
#	$(AM_V_CXX)source='role_goalie.cpp' object='sample_player-role_goalie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_goalie.o `test -f 'role_goalie.cpp' || echo '$(srcdir)/'`role_goalie.cpp

sample_player-role_goalie.obj: role_goalie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_goalie.obj -MD -MP -MF $(DEPDIR)/sample_player-role_goalie.Tpo -c -o sample_player-role_goalie.obj `if test -f 'role_goalie.cpp'; then $(CYGPATH_W) 'role_goalie.cpp'; else $(CYGPATH_W) '$(srcdir)/role_goalie.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_goalie.Tpo $(DEPDIR)/sample_player-role_goalie.Po
#	$(AM_V_CXX)source='role_goalie.cpp' object='sample_player-role_goalie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_goalie.obj `if test -f 'role_goalie.cpp'; then $(CYGPATH_W) 'role_goalie.cpp'; else $(CYGPATH_W) '$(srcdir)/role_goalie.cpp'; fi`

sample_player-role_offensive_half.o: role_offensive_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_offensive_half.o -MD -MP -MF $(DEPDIR)/sample_player-role_offensive_half.Tpo -c -o sample_player-role_offensive_half.o `test -f 'role_offensive_half.cpp' || echo '$(srcdir)/'`role_offensive_half.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_offensive_half.Tpo $(DEPDIR)/sample_player-role_offensive_half.Po
#	$(AM_V_CXX)source='role_offensive_half.cpp' object='sample_player-role_offensive_half.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_offensive_half.o `test -f 'role_offensive_half.cpp' || echo '$(srcdir)/'`role_offensive_half.cpp

sample_player-role_offensive_half.obj: role_offensive_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_offensive_half.obj -MD -MP -MF $(DEPDIR)/sample_player-role_offensive_half.Tpo -c -o sample_player-role_offensive_half.obj `if test -f 'role_offensive_half.cpp'; then $(CYGPATH_W) 'role_offensive_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_offensive_half.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_offensive_half.Tpo $(DEPDIR)/sample_player-role_offensive_half.Po
#	$(AM_V_CXX)source='role_offensive_half.cpp' object='sample_player-role_offensive_half.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_offensive_half.obj `if test -f 'role_offensive_half.cpp'; then $(CYGPATH_W) 'role_offensive_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_offensive_half.cpp'; fi`

sample_player-role_sample.o: role_sample.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_sample.o -MD -MP -MF $(DEPDIR)/sample_player-role_sample.Tpo -c -o sample_player-role_sample.o `test -f 'role_sample.cpp' || echo '$(srcdir)/'`role_sample.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_sample.Tpo $(DEPDIR)/sample_player-role_sample.Po
#	$(AM_V_CXX)source='role_sample.cpp' object='sample_player-role_sample.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_sample.o `test -f 'role_sample.cpp' || echo '$(srcdir)/'`role_sample.cpp

sample_player-role_sample.obj: role_sample.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_sample.obj -MD -MP -MF $(DEPDIR)/sample_player-role_sample.Tpo -c -o sample_player-role_sample.obj `if test -f 'role_sample.cpp'; then $(CYGPATH_W) 'role_sample.cpp'; else $(CYGPATH_W) '$(srcdir)/role_sample.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_sample.Tpo $(DEPDIR)/sample_player-role_sample.Po
#	$(AM_V_CXX)source='role_sample.cpp' object='sample_player-role_sample.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_sample.obj `if test -f 'role_sample.cpp'; then $(CYGPATH_W) 'role_sample.cpp'; else $(CYGPATH_W) '$(srcdir)/role_sample.cpp'; fi`

sample_player-role_side_back.o: role_side_back.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_back.o -MD -MP -MF $(DEPDIR)/sample_player-role_side_back.Tpo -c -o sample_player-role_side_back.o `test -f 'role_side_back.cpp' || echo '$(srcdir)/'`role_side_back.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_back.Tpo $(DEPDIR)/sample_player-role_side_back.Po
#	$(AM_V_CXX)source='role_side_back.cpp' object='sample_player-role_side_back.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_back.o `test -f 'role_side_back.cpp' || echo '$(srcdir)/'`role_side_back.cpp

sample_player-role_side_back.obj: role_side_back.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_back.obj -MD -MP -MF $(DEPDIR)/sample_player-role_side_back.Tpo -c -o sample_player-role_side_back.obj `if test -f 'role_side_back.cpp'; then $(CYGPATH_W) 'role_side_back.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_back.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_back.Tpo $(DEPDIR)/sample_player-role_side_back.Po
#	$(AM_V_CXX)source='role_side_back.cpp' object='sample_player-role_side_back.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_back.obj `if test -f 'role_side_back.cpp'; then $(CYGPATH_W) 'role_side_back.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_back.cpp'; fi`

sample_player-role_side_forward.o: role_side_forward.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_forward.o -MD -MP -MF $(DEPDIR)/sample_player-role_side_forward.Tpo -c -o sample_player-role_side_forward.o `test -f 'role_side_forward.cpp' || echo '$(srcdir)/'`role_side_forward.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_forward.Tpo $(DEPDIR)/sample_player-role_side_forward.Po
#	$(AM_V_CXX)source='role_side_forward.cpp' object='sample_player-role_side_forward.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_forward.o `test -f 'role_side_forward.cpp' || echo '$(srcdir)/'`role_side_forward.cpp

sample_player-role_side_forward.obj: role_side_forward.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_forward.obj -MD -MP -MF $(DEPDIR)/sample_player-role_side_forward.Tpo -c -o sample_player-role_side_forward.obj `if test -f 'role_side_forward.cpp'; then $(CYGPATH_W) 'role_side_forward.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_forward.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_forward.Tpo $(DEPDIR)/sample_player-role_side_forward.Po
#	$(AM_V_CXX)source='role_side_forward.cpp' object='sample_player-role_side_forward.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_forward.obj `if test -f 'role_side_forward.cpp'; then $(CYGPATH_W) 'role_side_forward.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_forward.cpp'; fi`

sample_player-role_side_half.o: role_side_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_half.o -MD -MP -MF $(DEPDIR)/sample_player-role_side_half.Tpo -c -o sample_player-role_side_half.o `test -f 'role_side_half.cpp' || echo '$(srcdir)/'`role_side_half.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_half.Tpo $(DEPDIR)/sample_player-role_side_half.Po
#	$(AM_V_CXX)source='role_side_half.cpp' object='sample_player-role_side_half.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_half.o `test -f 'role_side_half.cpp' || echo '$(srcdir)/'`role_side_half.cpp

sample_player-role_side_half.obj: role_side_half.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_side_half.obj -MD -MP -MF $(DEPDIR)/sample_player-role_side_half.Tpo -c -o sample_player-role_side_half.obj `if test -f 'role_side_half.cpp'; then $(CYGPATH_W) 'role_side_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_half.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_side_half.Tpo $(DEPDIR)/sample_player-role_side_half.Po
#	$(AM_V_CXX)source='role_side_half.cpp' object='sample_player-role_side_half.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_side_half.obj `if test -f 'role_side_half.cpp'; then $(CYGPATH_W) 'role_side_half.cpp'; else $(CYGPATH_W) '$(srcdir)/role_side_half.cpp'; fi`

sample_player-role_keepaway_keeper.o: role_keepaway_keeper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_keepaway_keeper.o -MD -MP -MF $(DEPDIR)/sample_player-role_keepaway_keeper.Tpo -c -o sample_player-role_keepaway_keeper.o `test -f 'role_keepaway_keeper.cpp' || echo '$(srcdir)/'`role_keepaway_keeper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_keepaway_keeper.Tpo $(DEPDIR)/sample_player-role_keepaway_keeper.Po
#	$(AM_V_CXX)source='role_keepaway_keeper.cpp' object='sample_player-role_keepaway_keeper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_keepaway_keeper.o `test -f 'role_keepaway_keeper.cpp' || echo '$(srcdir)/'`role_keepaway_keeper.cpp

sample_player-role_keepaway_keeper.obj: role_keepaway_keeper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_keepaway_keeper.obj -MD -MP -MF $(DEPDIR)/sample_player-role_keepaway_keeper.Tpo -c -o sample_player-role_keepaway_keeper.obj `if test -f 'role_keepaway_keeper.cpp'; then $(CYGPATH_W) 'role_keepaway_keeper.cpp'; else $(CYGPATH_W) '$(srcdir)/role_keepaway_keeper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_keepaway_keeper.Tpo $(DEPDIR)/sample_player-role_keepaway_keeper.Po
#	$(AM_V_CXX)source='role_keepaway_keeper.cpp' object='sample_player-role_keepaway_keeper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_keepaway_keeper.obj `if test -f 'role_keepaway_keeper.cpp'; then $(CYGPATH_W) 'role_keepaway_keeper.cpp'; else $(CYGPATH_W) '$(srcdir)/role_keepaway_keeper.cpp'; fi`

sample_player-role_keepaway_taker.o: role_keepaway_taker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_keepaway_taker.o -MD -MP -MF $(DEPDIR)/sample_player-role_keepaway_taker.Tpo -c -o sample_player-role_keepaway_taker.o `test -f 'role_keepaway_taker.cpp' || echo '$(srcdir)/'`role_keepaway_taker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_keepaway_taker.Tpo $(DEPDIR)/sample_player-role_keepaway_taker.Po
#	$(AM_V_CXX)source='role_keepaway_taker.cpp' object='sample_player-role_keepaway_taker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_keepaway_taker.o `test -f 'role_keepaway_taker.cpp' || echo '$(srcdir)/'`role_keepaway_taker.cpp

sample_player-role_keepaway_taker.obj: role_keepaway_taker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-role_keepaway_taker.obj -MD -MP -MF $(DEPDIR)/sample_player-role_keepaway_taker.Tpo -c -o sample_player-role_keepaway_taker.obj `if test -f 'role_keepaway_taker.cpp'; then $(CYGPATH_W) 'role_keepaway_taker.cpp'; else $(CYGPATH_W) '$(srcdir)/role_keepaway_taker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-role_keepaway_taker.Tpo $(DEPDIR)/sample_player-role_keepaway_taker.Po
#	$(AM_V_CXX)source='role_keepaway_taker.cpp' object='sample_player-role_keepaway_taker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-role_keepaway_taker.obj `if test -f 'role_keepaway_taker.cpp'; then $(CYGPATH_W) 'role_keepaway_taker.cpp'; else $(CYGPATH_W) '$(srcdir)/role_keepaway_taker.cpp'; fi`

sample_player-keepaway_communication.o: keepaway_communication.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-keepaway_communication.o -MD -MP -MF $(DEPDIR)/sample_player-keepaway_communication.Tpo -c -o sample_player-keepaway_communication.o `test -f 'keepaway_communication.cpp' || echo '$(srcdir)/'`keepaway_communication.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-keepaway_communication.Tpo $(DEPDIR)/sample_player-keepaway_communication.Po
#	$(AM_V_CXX)source='keepaway_communication.cpp' object='sample_player-keepaway_communication.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-keepaway_communication.o `test -f 'keepaway_communication.cpp' || echo '$(srcdir)/'`keepaway_communication.cpp

sample_player-keepaway_communication.obj: keepaway_communication.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-keepaway_communication.obj -MD -MP -MF $(DEPDIR)/sample_player-keepaway_communication.Tpo -c -o sample_player-keepaway_communication.obj `if test -f 'keepaway_communication.cpp'; then $(CYGPATH_W) 'keepaway_communication.cpp'; else $(CYGPATH_W) '$(srcdir)/keepaway_communication.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-keepaway_communication.Tpo $(DEPDIR)/sample_player-keepaway_communication.Po
#	$(AM_V_CXX)source='keepaway_communication.cpp' object='sample_player-keepaway_communication.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-keepaway_communication.obj `if test -f 'keepaway_communication.cpp'; then $(CYGPATH_W) 'keepaway_communication.cpp'; else $(CYGPATH_W) '$(srcdir)/keepaway_communication.cpp'; fi`

sample_player-sample_communication.o: sample_communication.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_communication.o -MD -MP -MF $(DEPDIR)/sample_player-sample_communication.Tpo -c -o sample_player-sample_communication.o `test -f 'sample_communication.cpp' || echo '$(srcdir)/'`sample_communication.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_communication.Tpo $(DEPDIR)/sample_player-sample_communication.Po
#	$(AM_V_CXX)source='sample_communication.cpp' object='sample_player-sample_communication.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_communication.o `test -f 'sample_communication.cpp' || echo '$(srcdir)/'`sample_communication.cpp

sample_player-sample_communication.obj: sample_communication.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_communication.obj -MD -MP -MF $(DEPDIR)/sample_player-sample_communication.Tpo -c -o sample_player-sample_communication.obj `if test -f 'sample_communication.cpp'; then $(CYGPATH_W) 'sample_communication.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_communication.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_communication.Tpo $(DEPDIR)/sample_player-sample_communication.Po
#	$(AM_V_CXX)source='sample_communication.cpp' object='sample_player-sample_communication.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_communication.obj `if test -f 'sample_communication.cpp'; then $(CYGPATH_W) 'sample_communication.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_communication.cpp'; fi`

sample_player-sample_field_evaluator.o: sample_field_evaluator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_field_evaluator.o -MD -MP -MF $(DEPDIR)/sample_player-sample_field_evaluator.Tpo -c -o sample_player-sample_field_evaluator.o `test -f 'sample_field_evaluator.cpp' || echo '$(srcdir)/'`sample_field_evaluator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_field_evaluator.Tpo $(DEPDIR)/sample_player-sample_field_evaluator.Po
#	$(AM_V_CXX)source='sample_field_evaluator.cpp' object='sample_player-sample_field_evaluator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_field_evaluator.o `test -f 'sample_field_evaluator.cpp' || echo '$(srcdir)/'`sample_field_evaluator.cpp

sample_player-sample_field_evaluator.obj: sample_field_evaluator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_field_evaluator.obj -MD -MP -MF $(DEPDIR)/sample_player-sample_field_evaluator.Tpo -c -o sample_player-sample_field_evaluator.obj `if test -f 'sample_field_evaluator.cpp'; then $(CYGPATH_W) 'sample_field_evaluator.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_field_evaluator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_field_evaluator.Tpo $(DEPDIR)/sample_player-sample_field_evaluator.Po
#	$(AM_V_CXX)source='sample_field_evaluator.cpp' object='sample_player-sample_field_evaluator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_field_evaluator.obj `if test -f 'sample_field_evaluator.cpp'; then $(CYGPATH_W) 'sample_field_evaluator.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_field_evaluator.cpp'; fi`

sample_player-sample_freeform_message_parser.o: sample_freeform_message_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_freeform_message_parser.o -MD -MP -MF $(DEPDIR)/sample_player-sample_freeform_message_parser.Tpo -c -o sample_player-sample_freeform_message_parser.o `test -f 'sample_freeform_message_parser.cpp' || echo '$(srcdir)/'`sample_freeform_message_parser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_freeform_message_parser.Tpo $(DEPDIR)/sample_player-sample_freeform_message_parser.Po
#	$(AM_V_CXX)source='sample_freeform_message_parser.cpp' object='sample_player-sample_freeform_message_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_freeform_message_parser.o `test -f 'sample_freeform_message_parser.cpp' || echo '$(srcdir)/'`sample_freeform_message_parser.cpp

sample_player-sample_freeform_message_parser.obj: sample_freeform_message_parser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_freeform_message_parser.obj -MD -MP -MF $(DEPDIR)/sample_player-sample_freeform_message_parser.Tpo -c -o sample_player-sample_freeform_message_parser.obj `if test -f 'sample_freeform_message_parser.cpp'; then $(CYGPATH_W) 'sample_freeform_message_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_freeform_message_parser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_freeform_message_parser.Tpo $(DEPDIR)/sample_player-sample_freeform_message_parser.Po
#	$(AM_V_CXX)source='sample_freeform_message_parser.cpp' object='sample_player-sample_freeform_message_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_freeform_message_parser.obj `if test -f 'sample_freeform_message_parser.cpp'; then $(CYGPATH_W) 'sample_freeform_message_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_freeform_message_parser.cpp'; fi`

sample_player-sample_player.o: sample_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_player.o -MD -MP -MF $(DEPDIR)/sample_player-sample_player.Tpo -c -o sample_player-sample_player.o `test -f 'sample_player.cpp' || echo '$(srcdir)/'`sample_player.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_player.Tpo $(DEPDIR)/sample_player-sample_player.Po
#	$(AM_V_CXX)source='sample_player.cpp' object='sample_player-sample_player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_player.o `test -f 'sample_player.cpp' || echo '$(srcdir)/'`sample_player.cpp

sample_player-sample_player.obj: sample_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-sample_player.obj -MD -MP -MF $(DEPDIR)/sample_player-sample_player.Tpo -c -o sample_player-sample_player.obj `if test -f 'sample_player.cpp'; then $(CYGPATH_W) 'sample_player.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_player.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-sample_player.Tpo $(DEPDIR)/sample_player-sample_player.Po
#	$(AM_V_CXX)source='sample_player.cpp' object='sample_player-sample_player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-sample_player.obj `if test -f 'sample_player.cpp'; then $(CYGPATH_W) 'sample_player.cpp'; else $(CYGPATH_W) '$(srcdir)/sample_player.cpp'; fi`

sample_player-strategy.o: strategy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-strategy.o -MD -MP -MF $(DEPDIR)/sample_player-strategy.Tpo -c -o sample_player-strategy.o `test -f 'strategy.cpp' || echo '$(srcdir)/'`strategy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-strategy.Tpo $(DEPDIR)/sample_player-strategy.Po
#	$(AM_V_CXX)source='strategy.cpp' object='sample_player-strategy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-strategy.o `test -f 'strategy.cpp' || echo '$(srcdir)/'`strategy.cpp

sample_player-strategy.obj: strategy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-strategy.obj -MD -MP -MF $(DEPDIR)/sample_player-strategy.Tpo -c -o sample_player-strategy.obj `if test -f 'strategy.cpp'; then $(CYGPATH_W) 'strategy.cpp'; else $(CYGPATH_W) '$(srcdir)/strategy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-strategy.Tpo $(DEPDIR)/sample_player-strategy.Po
#	$(AM_V_CXX)source='strategy.cpp' object='sample_player-strategy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-strategy.obj `if test -f 'strategy.cpp'; then $(CYGPATH_W) 'strategy.cpp'; else $(CYGPATH_W) '$(srcdir)/strategy.cpp'; fi`

sample_player-main_player.o: main_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-main_player.o -MD -MP -MF $(DEPDIR)/sample_player-main_player.Tpo -c -o sample_player-main_player.o `test -f 'main_player.cpp' || echo '$(srcdir)/'`main_player.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-main_player.Tpo $(DEPDIR)/sample_player-main_player.Po
#	$(AM_V_CXX)source='main_player.cpp' object='sample_player-main_player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-main_player.o `test -f 'main_player.cpp' || echo '$(srcdir)/'`main_player.cpp

sample_player-main_player.obj: main_player.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -MT sample_player-main_player.obj -MD -MP -MF $(DEPDIR)/sample_player-main_player.Tpo -c -o sample_player-main_player.obj `if test -f 'main_player.cpp'; then $(CYGPATH_W) 'main_player.cpp'; else $(CYGPATH_W) '$(srcdir)/main_player.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sample_player-main_player.Tpo $(DEPDIR)/sample_player-main_player.Po
#	$(AM_V_CXX)source='main_player.cpp' object='sample_player-main_player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(sample_player_CPPFLAGS) $(CPPFLAGS) $(sample_player_CXXFLAGS) $(CXXFLAGS) -c -o sample_player-main_player.obj `if test -f 'main_player.cpp'; then $(CYGPATH_W) 'main_player.cpp'; else $(CYGPATH_W) '$(srcdir)/main_player.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f basic_actions/$(DEPDIR)/$(am__dirstamp)
	-rm -f basic_actions/$(am__dirstamp)
	-rm -f planner/$(DEPDIR)/$(am__dirstamp)
	-rm -f planner/$(am__dirstamp)
	-rm -f setplay/$(DEPDIR)/$(am__dirstamp)
	-rm -f setplay/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/sample_player-bhv_basic_block.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_basic_move.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_basic_tackle.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_basic_move.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_free_kick.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_penalty_kick.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_unmark.Po
	-rm -f ./$(DEPDIR)/sample_player-intention_receive.Po
	-rm -f ./$(DEPDIR)/sample_player-intercept_evaluator_sample.Po
	-rm -f ./$(DEPDIR)/sample_player-keepaway_communication.Po
	-rm -f ./$(DEPDIR)/sample_player-main_player.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_default_intercept_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_goalie_turn_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-role_center_back.Po
	-rm -f ./$(DEPDIR)/sample_player-role_center_forward.Po
	-rm -f ./$(DEPDIR)/sample_player-role_defensive_half.Po
	-rm -f ./$(DEPDIR)/sample_player-role_goalie.Po
	-rm -f ./$(DEPDIR)/sample_player-role_keepaway_keeper.Po
	-rm -f ./$(DEPDIR)/sample_player-role_keepaway_taker.Po
	-rm -f ./$(DEPDIR)/sample_player-role_offensive_half.Po
	-rm -f ./$(DEPDIR)/sample_player-role_sample.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_back.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_forward.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_half.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_communication.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_field_evaluator.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_freeform_message_parser.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_player.Po
	-rm -f ./$(DEPDIR)/sample_player-soccer_role.Po
	-rm -f ./$(DEPDIR)/sample_player-strategy.Po
	-rm -f ./$(DEPDIR)/sample_player-view_tactical.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-basic_actions.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_pass.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-focus_reset.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-kick_table.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-view_synch.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_cross.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_self_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-action_chain_graph.Po
	-rm -f planner/$(DEPDIR)/sample_player-action_chain_holder.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_planned_action.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-body_force_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-clear_ball.Po
	-rm -f planner/$(DEPDIR)/sample_player-clear_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-cooperative_action.Po
	-rm -f planner/$(DEPDIR)/sample_player-cross_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-field_analyzer.Po
	-rm -f planner/$(DEPDIR)/sample_player-hold_ball.Po
	-rm -f planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po
	-rm -f planner/$(DEPDIR)/sample_player-pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-predict_state.Po
	-rm -f planner/$(DEPDIR)/sample_player-self_pass_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-shoot_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-short_dribble_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-simple_pass_checker.Po
	-rm -f planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-tackle_generator.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po
	-rm -f setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/sample_player-bhv_basic_block.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_basic_move.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_basic_tackle.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_custom_before_kick_off.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_basic_move.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_chase_ball.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_goalie_free_kick.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_penalty_kick.Po
	-rm -f ./$(DEPDIR)/sample_player-bhv_unmark.Po
	-rm -f ./$(DEPDIR)/sample_player-intention_receive.Po
	-rm -f ./$(DEPDIR)/sample_player-intercept_evaluator_sample.Po
	-rm -f ./$(DEPDIR)/sample_player-keepaway_communication.Po
	-rm -f ./$(DEPDIR)/sample_player-main_player.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_default_intercept_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_goalie_turn_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-neck_offensive_intercept_neck.Po
	-rm -f ./$(DEPDIR)/sample_player-role_center_back.Po
	-rm -f ./$(DEPDIR)/sample_player-role_center_forward.Po
	-rm -f ./$(DEPDIR)/sample_player-role_defensive_half.Po
	-rm -f ./$(DEPDIR)/sample_player-role_goalie.Po
	-rm -f ./$(DEPDIR)/sample_player-role_keepaway_keeper.Po
	-rm -f ./$(DEPDIR)/sample_player-role_keepaway_taker.Po
	-rm -f ./$(DEPDIR)/sample_player-role_offensive_half.Po
	-rm -f ./$(DEPDIR)/sample_player-role_sample.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_back.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_forward.Po
	-rm -f ./$(DEPDIR)/sample_player-role_side_half.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_communication.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_field_evaluator.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_freeform_message_parser.Po
	-rm -f ./$(DEPDIR)/sample_player-sample_player.Po
	-rm -f ./$(DEPDIR)/sample_player-soccer_role.Po
	-rm -f ./$(DEPDIR)/sample_player-strategy.Po
	-rm -f ./$(DEPDIR)/sample_player-view_tactical.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-basic_actions.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_before_kick_off.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_emergency.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_go_to_point_look_ball.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-bhv_scan_field.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_advance_ball2009.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_clear_ball2009.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_dribble2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_go_to_point.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_go_to_point_dodge.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_hold_ball2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_intercept2018.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_kick_one_step.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_kick_to_relative.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_pass.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_smart_kick.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_stop_ball.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-body_stop_dash.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-focus_move_to_point.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-focus_reset.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intention_dribble2008.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intention_time_limit_action.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-intercept_evaluator.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-kick_table.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_scan_field.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_scan_players.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_and_player.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_ball_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_goalie_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_low_conf_teammate.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-neck_turn_to_player_or_scan.Po
	-rm -f basic_actions/$(DEPDIR)/sample_player-view_synch.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_cross.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_direct_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_self_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_short_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_simple_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-actgen_strict_check_pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-action_chain_graph.Po
	-rm -f planner/$(DEPDIR)/sample_player-action_chain_holder.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_normal_dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_pass_kick_find_receiver.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_planned_action.Po
	-rm -f planner/$(DEPDIR)/sample_player-bhv_strict_check_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-body_force_shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-clear_ball.Po
	-rm -f planner/$(DEPDIR)/sample_player-clear_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-cooperative_action.Po
	-rm -f planner/$(DEPDIR)/sample_player-cross_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-dribble.Po
	-rm -f planner/$(DEPDIR)/sample_player-field_analyzer.Po
	-rm -f planner/$(DEPDIR)/sample_player-hold_ball.Po
	-rm -f planner/$(DEPDIR)/sample_player-neck_turn_to_receiver.Po
	-rm -f planner/$(DEPDIR)/sample_player-pass.Po
	-rm -f planner/$(DEPDIR)/sample_player-predict_state.Po
	-rm -f planner/$(DEPDIR)/sample_player-self_pass_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-shoot.Po
	-rm -f planner/$(DEPDIR)/sample_player-shoot_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-short_dribble_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-simple_pass_checker.Po
	-rm -f planner/$(DEPDIR)/sample_player-strict_check_pass_generator.Po
	-rm -f planner/$(DEPDIR)/sample_player-tackle_generator.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_go_to_placed_ball.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_prepare_set_play_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_free_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_goal_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_indirect_free_kick.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_in.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_set_play_kick_off.Po
	-rm -f setplay/$(DEPDIR)/sample_player-bhv_their_goal_kick_move.Po
	-rm -f setplay/$(DEPDIR)/sample_player-intention_wait_after_set_play_kick.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-noinstPROGRAMS cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
